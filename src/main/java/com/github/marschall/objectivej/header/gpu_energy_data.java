// Generated by jextract

package com.github.marschall.objectivej.header;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * struct {
 *     uint64_t task_gpu_utilisation;
 *     uint64_t task_gpu_stat_reserved0;
 *     uint64_t task_gpu_stat_reserved1;
 *     uint64_t task_gpu_stat_reserved2;
 * }
 * }
 */
public class gpu_energy_data {

    gpu_energy_data() {
        // Should not be called directly
    }

    private static final GroupLayout $LAYOUT = MemoryLayout.structLayout(
        ObjCRuntime.align(ObjCRuntime.C_LONG_LONG, 4).withName("task_gpu_utilisation"),
        ObjCRuntime.align(ObjCRuntime.C_LONG_LONG, 4).withName("task_gpu_stat_reserved0"),
        ObjCRuntime.align(ObjCRuntime.C_LONG_LONG, 4).withName("task_gpu_stat_reserved1"),
        ObjCRuntime.align(ObjCRuntime.C_LONG_LONG, 4).withName("task_gpu_stat_reserved2")
    ).withName("$anon$461:9");

    /**
     * The layout of this struct
     */
    public static final GroupLayout layout() {
        return $LAYOUT;
    }

    private static final OfLong task_gpu_utilisation$LAYOUT = (OfLong)$LAYOUT.select(groupElement("task_gpu_utilisation"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_utilisation
     * }
     */
    public static final OfLong task_gpu_utilisation$layout() {
        return task_gpu_utilisation$LAYOUT;
    }

    private static final long task_gpu_utilisation$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_utilisation
     * }
     */
    public static final long task_gpu_utilisation$offset() {
        return task_gpu_utilisation$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_utilisation
     * }
     */
    public static long task_gpu_utilisation(MemorySegment struct) {
        return struct.get(task_gpu_utilisation$LAYOUT, task_gpu_utilisation$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_utilisation
     * }
     */
    public static void task_gpu_utilisation(MemorySegment struct, long fieldValue) {
        struct.set(task_gpu_utilisation$LAYOUT, task_gpu_utilisation$OFFSET, fieldValue);
    }

    private static final OfLong task_gpu_stat_reserved0$LAYOUT = (OfLong)$LAYOUT.select(groupElement("task_gpu_stat_reserved0"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved0
     * }
     */
    public static final OfLong task_gpu_stat_reserved0$layout() {
        return task_gpu_stat_reserved0$LAYOUT;
    }

    private static final long task_gpu_stat_reserved0$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved0
     * }
     */
    public static final long task_gpu_stat_reserved0$offset() {
        return task_gpu_stat_reserved0$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved0
     * }
     */
    public static long task_gpu_stat_reserved0(MemorySegment struct) {
        return struct.get(task_gpu_stat_reserved0$LAYOUT, task_gpu_stat_reserved0$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved0
     * }
     */
    public static void task_gpu_stat_reserved0(MemorySegment struct, long fieldValue) {
        struct.set(task_gpu_stat_reserved0$LAYOUT, task_gpu_stat_reserved0$OFFSET, fieldValue);
    }

    private static final OfLong task_gpu_stat_reserved1$LAYOUT = (OfLong)$LAYOUT.select(groupElement("task_gpu_stat_reserved1"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved1
     * }
     */
    public static final OfLong task_gpu_stat_reserved1$layout() {
        return task_gpu_stat_reserved1$LAYOUT;
    }

    private static final long task_gpu_stat_reserved1$OFFSET = 16;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved1
     * }
     */
    public static final long task_gpu_stat_reserved1$offset() {
        return task_gpu_stat_reserved1$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved1
     * }
     */
    public static long task_gpu_stat_reserved1(MemorySegment struct) {
        return struct.get(task_gpu_stat_reserved1$LAYOUT, task_gpu_stat_reserved1$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved1
     * }
     */
    public static void task_gpu_stat_reserved1(MemorySegment struct, long fieldValue) {
        struct.set(task_gpu_stat_reserved1$LAYOUT, task_gpu_stat_reserved1$OFFSET, fieldValue);
    }

    private static final OfLong task_gpu_stat_reserved2$LAYOUT = (OfLong)$LAYOUT.select(groupElement("task_gpu_stat_reserved2"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved2
     * }
     */
    public static final OfLong task_gpu_stat_reserved2$layout() {
        return task_gpu_stat_reserved2$LAYOUT;
    }

    private static final long task_gpu_stat_reserved2$OFFSET = 24;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved2
     * }
     */
    public static final long task_gpu_stat_reserved2$offset() {
        return task_gpu_stat_reserved2$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved2
     * }
     */
    public static long task_gpu_stat_reserved2(MemorySegment struct) {
        return struct.get(task_gpu_stat_reserved2$LAYOUT, task_gpu_stat_reserved2$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint64_t task_gpu_stat_reserved2
     * }
     */
    public static void task_gpu_stat_reserved2(MemorySegment struct, long fieldValue) {
        struct.set(task_gpu_stat_reserved2$LAYOUT, task_gpu_stat_reserved2$OFFSET, fieldValue);
    }

    /**
     * Obtains a slice of {@code arrayParam} which selects the array element at {@code index}.
     * The returned segment has address {@code arrayParam.address() + index * layout().byteSize()}
     */
    public static MemorySegment asSlice(MemorySegment array, long index) {
        return array.asSlice(layout().byteSize() * index);
    }

    /**
     * The size (in bytes) of this struct
     */
    public static long sizeof() { return layout().byteSize(); }

    /**
     * Allocate a segment of size {@code layout().byteSize()} using {@code allocator}
     */
    public static MemorySegment allocate(SegmentAllocator allocator) {
        return allocator.allocate(layout());
    }

    /**
     * Allocate an array of size {@code elementCount} using {@code allocator}.
     * The returned segment has size {@code elementCount * layout().byteSize()}.
     */
    public static MemorySegment allocateArray(long elementCount, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(elementCount, layout()));
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, Arena arena, Consumer<MemorySegment> cleanup) {
        return reinterpret(addr, 1, arena, cleanup);
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code elementCount * layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, long elementCount, Arena arena, Consumer<MemorySegment> cleanup) {
        return addr.reinterpret(layout().byteSize() * elementCount, arena, cleanup);
    }
}

