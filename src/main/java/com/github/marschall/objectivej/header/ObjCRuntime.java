// Generated by jextract

package com.github.marschall.objectivej.header;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class ObjCRuntime extends ObjCRuntime_1 {

    ObjCRuntime() {
        // Should not be called directly
    }
    private static final int MAC_OS_X_VERSION_10_13_2 = (int)101302L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_13_2 101302
     * }
     */
    public static int MAC_OS_X_VERSION_10_13_2() {
        return MAC_OS_X_VERSION_10_13_2;
    }
    private static final int MAC_OS_X_VERSION_10_13_4 = (int)101304L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_13_4 101304
     * }
     */
    public static int MAC_OS_X_VERSION_10_13_4() {
        return MAC_OS_X_VERSION_10_13_4;
    }
    private static final int MAC_OS_X_VERSION_10_14 = (int)101400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14 101400
     * }
     */
    public static int MAC_OS_X_VERSION_10_14() {
        return MAC_OS_X_VERSION_10_14;
    }
    private static final int MAC_OS_X_VERSION_10_14_1 = (int)101401L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_1 101401
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_1() {
        return MAC_OS_X_VERSION_10_14_1;
    }
    private static final int MAC_OS_X_VERSION_10_14_4 = (int)101404L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_4 101404
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_4() {
        return MAC_OS_X_VERSION_10_14_4;
    }
    private static final int MAC_OS_X_VERSION_10_14_5 = (int)101405L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_5 101405
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_5() {
        return MAC_OS_X_VERSION_10_14_5;
    }
    private static final int MAC_OS_X_VERSION_10_14_6 = (int)101406L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_6 101406
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_6() {
        return MAC_OS_X_VERSION_10_14_6;
    }
    private static final int MAC_OS_X_VERSION_10_15 = (int)101500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_15 101500
     * }
     */
    public static int MAC_OS_X_VERSION_10_15() {
        return MAC_OS_X_VERSION_10_15;
    }
    private static final int MAC_OS_X_VERSION_10_15_1 = (int)101501L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_15_1 101501
     * }
     */
    public static int MAC_OS_X_VERSION_10_15_1() {
        return MAC_OS_X_VERSION_10_15_1;
    }
    private static final int MAC_OS_X_VERSION_10_15_4 = (int)101504L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_15_4 101504
     * }
     */
    public static int MAC_OS_X_VERSION_10_15_4() {
        return MAC_OS_X_VERSION_10_15_4;
    }
    private static final int MAC_OS_X_VERSION_10_16 = (int)101600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_16 101600
     * }
     */
    public static int MAC_OS_X_VERSION_10_16() {
        return MAC_OS_X_VERSION_10_16;
    }
    private static final int MAC_OS_VERSION_11_0 = (int)110000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_0 110000
     * }
     */
    public static int MAC_OS_VERSION_11_0() {
        return MAC_OS_VERSION_11_0;
    }
    private static final int MAC_OS_VERSION_11_1 = (int)110100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_1 110100
     * }
     */
    public static int MAC_OS_VERSION_11_1() {
        return MAC_OS_VERSION_11_1;
    }
    private static final int MAC_OS_VERSION_11_3 = (int)110300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_3 110300
     * }
     */
    public static int MAC_OS_VERSION_11_3() {
        return MAC_OS_VERSION_11_3;
    }
    private static final int MAC_OS_VERSION_11_4 = (int)110400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_4 110400
     * }
     */
    public static int MAC_OS_VERSION_11_4() {
        return MAC_OS_VERSION_11_4;
    }
    private static final int MAC_OS_VERSION_11_5 = (int)110500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_5 110500
     * }
     */
    public static int MAC_OS_VERSION_11_5() {
        return MAC_OS_VERSION_11_5;
    }
    private static final int MAC_OS_VERSION_11_6 = (int)110600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_6 110600
     * }
     */
    public static int MAC_OS_VERSION_11_6() {
        return MAC_OS_VERSION_11_6;
    }
    private static final int MAC_OS_VERSION_12_0 = (int)120000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_0 120000
     * }
     */
    public static int MAC_OS_VERSION_12_0() {
        return MAC_OS_VERSION_12_0;
    }
    private static final int MAC_OS_VERSION_12_1 = (int)120100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_1 120100
     * }
     */
    public static int MAC_OS_VERSION_12_1() {
        return MAC_OS_VERSION_12_1;
    }
    private static final int MAC_OS_VERSION_12_2 = (int)120200L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_2 120200
     * }
     */
    public static int MAC_OS_VERSION_12_2() {
        return MAC_OS_VERSION_12_2;
    }
    private static final int MAC_OS_VERSION_12_3 = (int)120300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_3 120300
     * }
     */
    public static int MAC_OS_VERSION_12_3() {
        return MAC_OS_VERSION_12_3;
    }
    private static final int MAC_OS_VERSION_12_4 = (int)120400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_4 120400
     * }
     */
    public static int MAC_OS_VERSION_12_4() {
        return MAC_OS_VERSION_12_4;
    }
    private static final int MAC_OS_VERSION_12_5 = (int)120500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_5 120500
     * }
     */
    public static int MAC_OS_VERSION_12_5() {
        return MAC_OS_VERSION_12_5;
    }
    private static final int MAC_OS_VERSION_12_6 = (int)120600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_6 120600
     * }
     */
    public static int MAC_OS_VERSION_12_6() {
        return MAC_OS_VERSION_12_6;
    }
    private static final int MAC_OS_VERSION_12_7 = (int)120700L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_7 120700
     * }
     */
    public static int MAC_OS_VERSION_12_7() {
        return MAC_OS_VERSION_12_7;
    }
    private static final int MAC_OS_VERSION_13_0 = (int)130000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_0 130000
     * }
     */
    public static int MAC_OS_VERSION_13_0() {
        return MAC_OS_VERSION_13_0;
    }
    private static final int MAC_OS_VERSION_13_1 = (int)130100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_1 130100
     * }
     */
    public static int MAC_OS_VERSION_13_1() {
        return MAC_OS_VERSION_13_1;
    }
    private static final int MAC_OS_VERSION_13_2 = (int)130200L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_2 130200
     * }
     */
    public static int MAC_OS_VERSION_13_2() {
        return MAC_OS_VERSION_13_2;
    }
    private static final int MAC_OS_VERSION_13_3 = (int)130300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_3 130300
     * }
     */
    public static int MAC_OS_VERSION_13_3() {
        return MAC_OS_VERSION_13_3;
    }
    private static final int MAC_OS_VERSION_13_4 = (int)130400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_4 130400
     * }
     */
    public static int MAC_OS_VERSION_13_4() {
        return MAC_OS_VERSION_13_4;
    }
    private static final int MAC_OS_VERSION_13_5 = (int)130500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_5 130500
     * }
     */
    public static int MAC_OS_VERSION_13_5() {
        return MAC_OS_VERSION_13_5;
    }
    private static final int MAC_OS_VERSION_13_6 = (int)130600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_6 130600
     * }
     */
    public static int MAC_OS_VERSION_13_6() {
        return MAC_OS_VERSION_13_6;
    }
    private static final int MAC_OS_VERSION_14_0 = (int)140000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_0 140000
     * }
     */
    public static int MAC_OS_VERSION_14_0() {
        return MAC_OS_VERSION_14_0;
    }
    private static final int MAC_OS_VERSION_14_1 = (int)140100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_1 140100
     * }
     */
    public static int MAC_OS_VERSION_14_1() {
        return MAC_OS_VERSION_14_1;
    }
    private static final int MAC_OS_VERSION_14_2 = (int)140200L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_2 140200
     * }
     */
    public static int MAC_OS_VERSION_14_2() {
        return MAC_OS_VERSION_14_2;
    }
    private static final int MAC_OS_VERSION_14_3 = (int)140300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_3 140300
     * }
     */
    public static int MAC_OS_VERSION_14_3() {
        return MAC_OS_VERSION_14_3;
    }
    private static final int MAC_OS_VERSION_14_4 = (int)140400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_4 140400
     * }
     */
    public static int MAC_OS_VERSION_14_4() {
        return MAC_OS_VERSION_14_4;
    }
    private static final int MAC_OS_VERSION_14_5 = (int)140500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_5 140500
     * }
     */
    public static int MAC_OS_VERSION_14_5() {
        return MAC_OS_VERSION_14_5;
    }
    private static final int MAC_OS_VERSION_15_0 = (int)150000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_15_0 150000
     * }
     */
    public static int MAC_OS_VERSION_15_0() {
        return MAC_OS_VERSION_15_0;
    }
    private static final int __MAC_OS_X_VERSION_MAX_ALLOWED = (int)150000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_OS_X_VERSION_MAX_ALLOWED 150000
     * }
     */
    public static int __MAC_OS_X_VERSION_MAX_ALLOWED() {
        return __MAC_OS_X_VERSION_MAX_ALLOWED;
    }
    /**
     * {@snippet lang=c :
     * #define __DARWIN_SUF_EXTSN "$DARWIN_EXTSN"
     * }
     */
    public static MemorySegment __DARWIN_SUF_EXTSN() {
        class Holder {
            static final MemorySegment __DARWIN_SUF_EXTSN
                = ObjCRuntime.LIBRARY_ARENA.allocateFrom("$DARWIN_EXTSN");
        }
        return Holder.__DARWIN_SUF_EXTSN;
    }
    private static final long __DARWIN_C_ANSI = 4096L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_C_ANSI 4096
     * }
     */
    public static long __DARWIN_C_ANSI() {
        return __DARWIN_C_ANSI;
    }
    private static final long __DARWIN_C_FULL = 900000L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_C_FULL 900000
     * }
     */
    public static long __DARWIN_C_FULL() {
        return __DARWIN_C_FULL;
    }
    private static final long __DARWIN_C_LEVEL = 900000L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_C_LEVEL 900000
     * }
     */
    public static long __DARWIN_C_LEVEL() {
        return __DARWIN_C_LEVEL;
    }
    private static final MemorySegment __DARWIN_NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NULL (void*) 0
     * }
     */
    public static MemorySegment __DARWIN_NULL() {
        return __DARWIN_NULL;
    }
    private static final int __DARWIN_WCHAR_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_WCHAR_MAX 2147483647
     * }
     */
    public static int __DARWIN_WCHAR_MAX() {
        return __DARWIN_WCHAR_MAX;
    }
    private static final int __DARWIN_WCHAR_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_WCHAR_MIN -2147483648
     * }
     */
    public static int __DARWIN_WCHAR_MIN() {
        return __DARWIN_WCHAR_MIN;
    }
    private static final int __DARWIN_WEOF = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_WEOF -1
     * }
     */
    public static int __DARWIN_WEOF() {
        return __DARWIN_WEOF;
    }
    private static final int NSIG = (int)32L;
    /**
     * {@snippet lang=c :
     * #define NSIG 32
     * }
     */
    public static int NSIG() {
        return NSIG;
    }
    private static final int SIGIOT = (int)6L;
    /**
     * {@snippet lang=c :
     * #define SIGIOT 6
     * }
     */
    public static int SIGIOT() {
        return SIGIOT;
    }
    private static final MemorySegment SIG_DFL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define SIG_DFL (void*) 0
     * }
     */
    public static MemorySegment SIG_DFL() {
        return SIG_DFL;
    }
    private static final MemorySegment SIG_IGN = MemorySegment.ofAddress(1L);
    /**
     * {@snippet lang=c :
     * #define SIG_IGN (void*) 1
     * }
     */
    public static MemorySegment SIG_IGN() {
        return SIG_IGN;
    }
    private static final MemorySegment SIG_HOLD = MemorySegment.ofAddress(5L);
    /**
     * {@snippet lang=c :
     * #define SIG_HOLD (void*) 5
     * }
     */
    public static MemorySegment SIG_HOLD() {
        return SIG_HOLD;
    }
    private static final MemorySegment SIG_ERR = MemorySegment.ofAddress(-1L);
    /**
     * {@snippet lang=c :
     * #define SIG_ERR (void*) -1
     * }
     */
    public static MemorySegment SIG_ERR() {
        return SIG_ERR;
    }
    private static final long USER_ADDR_NULL = 0L;
    /**
     * {@snippet lang=c :
     * #define USER_ADDR_NULL 0
     * }
     */
    public static long USER_ADDR_NULL() {
        return USER_ADDR_NULL;
    }
    private static final int SA_USERSPACE_MASK = (int)127L;
    /**
     * {@snippet lang=c :
     * #define SA_USERSPACE_MASK 127
     * }
     */
    public static int SA_USERSPACE_MASK() {
        return SA_USERSPACE_MASK;
    }
    private static final int SV_ONSTACK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SV_ONSTACK 1
     * }
     */
    public static int SV_ONSTACK() {
        return SV_ONSTACK;
    }
    private static final int SV_INTERRUPT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SV_INTERRUPT 2
     * }
     */
    public static int SV_INTERRUPT() {
        return SV_INTERRUPT;
    }
    private static final int SV_RESETHAND = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SV_RESETHAND 4
     * }
     */
    public static int SV_RESETHAND() {
        return SV_RESETHAND;
    }
    private static final int SV_NODEFER = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SV_NODEFER 16
     * }
     */
    public static int SV_NODEFER() {
        return SV_NODEFER;
    }
    private static final int SV_NOCLDSTOP = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SV_NOCLDSTOP 8
     * }
     */
    public static int SV_NOCLDSTOP() {
        return SV_NOCLDSTOP;
    }
    private static final int SV_SIGINFO = (int)64L;
    /**
     * {@snippet lang=c :
     * #define SV_SIGINFO 64
     * }
     */
    public static int SV_SIGINFO() {
        return SV_SIGINFO;
    }
    private static final MemorySegment BADSIG = MemorySegment.ofAddress(-1L);
    /**
     * {@snippet lang=c :
     * #define BADSIG (void*) -1
     * }
     */
    public static MemorySegment BADSIG() {
        return BADSIG;
    }
    private static final long INT64_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INT64_MAX 9223372036854775807
     * }
     */
    public static long INT64_MAX() {
        return INT64_MAX;
    }
    private static final int INT8_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define INT8_MIN -128
     * }
     */
    public static int INT8_MIN() {
        return INT8_MIN;
    }
    private static final int INT16_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define INT16_MIN -32768
     * }
     */
    public static int INT16_MIN() {
        return INT16_MIN;
    }
    private static final int INT32_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define INT32_MIN -2147483648
     * }
     */
    public static int INT32_MIN() {
        return INT32_MIN;
    }
    private static final long INT64_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INT64_MIN -9223372036854775808
     * }
     */
    public static long INT64_MIN() {
        return INT64_MIN;
    }
    private static final int UINT32_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define UINT32_MAX 4294967295
     * }
     */
    public static int UINT32_MAX() {
        return UINT32_MAX;
    }
    private static final long UINT64_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINT64_MAX -1
     * }
     */
    public static long UINT64_MAX() {
        return UINT64_MAX;
    }
    private static final int INT_LEAST8_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST8_MIN -128
     * }
     */
    public static int INT_LEAST8_MIN() {
        return INT_LEAST8_MIN;
    }
    private static final int INT_LEAST16_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST16_MIN -32768
     * }
     */
    public static int INT_LEAST16_MIN() {
        return INT_LEAST16_MIN;
    }
    private static final int INT_LEAST32_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST32_MIN -2147483648
     * }
     */
    public static int INT_LEAST32_MIN() {
        return INT_LEAST32_MIN;
    }
    private static final long INT_LEAST64_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_LEAST64_MIN() {
        return INT_LEAST64_MIN;
    }
    private static final int INT_LEAST8_MAX = (int)127L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST8_MAX 127
     * }
     */
    public static int INT_LEAST8_MAX() {
        return INT_LEAST8_MAX;
    }
    private static final int INT_LEAST16_MAX = (int)32767L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST16_MAX 32767
     * }
     */
    public static int INT_LEAST16_MAX() {
        return INT_LEAST16_MAX;
    }
    private static final int INT_LEAST32_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST32_MAX 2147483647
     * }
     */
    public static int INT_LEAST32_MAX() {
        return INT_LEAST32_MAX;
    }
    private static final long INT_LEAST64_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_LEAST64_MAX() {
        return INT_LEAST64_MAX;
    }
    private static final int UINT_LEAST8_MAX = (int)255L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST8_MAX 255
     * }
     */
    public static int UINT_LEAST8_MAX() {
        return UINT_LEAST8_MAX;
    }
    private static final int UINT_LEAST16_MAX = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST16_MAX 65535
     * }
     */
    public static int UINT_LEAST16_MAX() {
        return UINT_LEAST16_MAX;
    }
    private static final int UINT_LEAST32_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST32_MAX 4294967295
     * }
     */
    public static int UINT_LEAST32_MAX() {
        return UINT_LEAST32_MAX;
    }
    private static final long UINT_LEAST64_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST64_MAX -1
     * }
     */
    public static long UINT_LEAST64_MAX() {
        return UINT_LEAST64_MAX;
    }
    private static final int INT_FAST8_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST8_MIN -128
     * }
     */
    public static int INT_FAST8_MIN() {
        return INT_FAST8_MIN;
    }
    private static final int INT_FAST16_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST16_MIN -32768
     * }
     */
    public static int INT_FAST16_MIN() {
        return INT_FAST16_MIN;
    }
    private static final int INT_FAST32_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST32_MIN -2147483648
     * }
     */
    public static int INT_FAST32_MIN() {
        return INT_FAST32_MIN;
    }
    private static final long INT_FAST64_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST64_MIN() {
        return INT_FAST64_MIN;
    }
    private static final int INT_FAST8_MAX = (int)127L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST8_MAX 127
     * }
     */
    public static int INT_FAST8_MAX() {
        return INT_FAST8_MAX;
    }
    private static final int INT_FAST16_MAX = (int)32767L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST16_MAX 32767
     * }
     */
    public static int INT_FAST16_MAX() {
        return INT_FAST16_MAX;
    }
    private static final int INT_FAST32_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST32_MAX 2147483647
     * }
     */
    public static int INT_FAST32_MAX() {
        return INT_FAST32_MAX;
    }
    private static final long INT_FAST64_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST64_MAX() {
        return INT_FAST64_MAX;
    }
    private static final int UINT_FAST8_MAX = (int)255L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST8_MAX 255
     * }
     */
    public static int UINT_FAST8_MAX() {
        return UINT_FAST8_MAX;
    }
    private static final int UINT_FAST16_MAX = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST16_MAX 65535
     * }
     */
    public static int UINT_FAST16_MAX() {
        return UINT_FAST16_MAX;
    }
    private static final int UINT_FAST32_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST32_MAX 4294967295
     * }
     */
    public static int UINT_FAST32_MAX() {
        return UINT_FAST32_MAX;
    }
    private static final long UINT_FAST64_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST64_MAX -1
     * }
     */
    public static long UINT_FAST64_MAX() {
        return UINT_FAST64_MAX;
    }
    private static final long INTPTR_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INTPTR_MAX 9223372036854775807
     * }
     */
    public static long INTPTR_MAX() {
        return INTPTR_MAX;
    }
    private static final long INTPTR_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INTPTR_MIN -9223372036854775808
     * }
     */
    public static long INTPTR_MIN() {
        return INTPTR_MIN;
    }
    private static final long UINTPTR_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINTPTR_MAX -1
     * }
     */
    public static long UINTPTR_MAX() {
        return UINTPTR_MAX;
    }
    private static final long INTMAX_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INTMAX_MAX 9223372036854775807
     * }
     */
    public static long INTMAX_MAX() {
        return INTMAX_MAX;
    }
    private static final long UINTMAX_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINTMAX_MAX -1
     * }
     */
    public static long UINTMAX_MAX() {
        return UINTMAX_MAX;
    }
    private static final long INTMAX_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INTMAX_MIN -9223372036854775808
     * }
     */
    public static long INTMAX_MIN() {
        return INTMAX_MIN;
    }
    private static final long PTRDIFF_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define PTRDIFF_MIN -9223372036854775808
     * }
     */
    public static long PTRDIFF_MIN() {
        return PTRDIFF_MIN;
    }
    private static final long PTRDIFF_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define PTRDIFF_MAX 9223372036854775807
     * }
     */
    public static long PTRDIFF_MAX() {
        return PTRDIFF_MAX;
    }
    private static final long SIZE_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define SIZE_MAX -1
     * }
     */
    public static long SIZE_MAX() {
        return SIZE_MAX;
    }
    private static final long RSIZE_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define RSIZE_MAX 9223372036854775807
     * }
     */
    public static long RSIZE_MAX() {
        return RSIZE_MAX;
    }
    private static final int WCHAR_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define WCHAR_MAX 2147483647
     * }
     */
    public static int WCHAR_MAX() {
        return WCHAR_MAX;
    }
    private static final int WCHAR_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define WCHAR_MIN -2147483648
     * }
     */
    public static int WCHAR_MIN() {
        return WCHAR_MIN;
    }
    private static final int WINT_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define WINT_MIN -2147483648
     * }
     */
    public static int WINT_MIN() {
        return WINT_MIN;
    }
    private static final int WINT_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define WINT_MAX 2147483647
     * }
     */
    public static int WINT_MAX() {
        return WINT_MAX;
    }
    private static final int SIG_ATOMIC_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define SIG_ATOMIC_MIN -2147483648
     * }
     */
    public static int SIG_ATOMIC_MIN() {
        return SIG_ATOMIC_MIN;
    }
    private static final int SIG_ATOMIC_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define SIG_ATOMIC_MAX 2147483647
     * }
     */
    public static int SIG_ATOMIC_MAX() {
        return SIG_ATOMIC_MAX;
    }
    private static final int PRIO_MIN = (int)-20L;
    /**
     * {@snippet lang=c :
     * #define PRIO_MIN -20
     * }
     */
    public static int PRIO_MIN() {
        return PRIO_MIN;
    }
    private static final int RUSAGE_CHILDREN = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define RUSAGE_CHILDREN -1
     * }
     */
    public static int RUSAGE_CHILDREN() {
        return RUSAGE_CHILDREN;
    }
    private static final int RUSAGE_INFO_CURRENT = (int)6L;
    /**
     * {@snippet lang=c :
     * #define RUSAGE_INFO_CURRENT 6
     * }
     */
    public static int RUSAGE_INFO_CURRENT() {
        return RUSAGE_INFO_CURRENT;
    }
    private static final long RLIM_INFINITY = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define RLIM_INFINITY 9223372036854775807
     * }
     */
    public static long RLIM_INFINITY() {
        return RLIM_INFINITY;
    }
    private static final long RLIM_SAVED_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define RLIM_SAVED_MAX 9223372036854775807
     * }
     */
    public static long RLIM_SAVED_MAX() {
        return RLIM_SAVED_MAX;
    }
    private static final long RLIM_SAVED_CUR = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define RLIM_SAVED_CUR 9223372036854775807
     * }
     */
    public static long RLIM_SAVED_CUR() {
        return RLIM_SAVED_CUR;
    }
    private static final int RLIMIT_RSS = (int)5L;
    /**
     * {@snippet lang=c :
     * #define RLIMIT_RSS 5
     * }
     */
    public static int RLIMIT_RSS() {
        return RLIMIT_RSS;
    }
    private static final int IOPOL_APPLICATION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define IOPOL_APPLICATION 5
     * }
     */
    public static int IOPOL_APPLICATION() {
        return IOPOL_APPLICATION;
    }
    private static final int IOPOL_NORMAL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define IOPOL_NORMAL 1
     * }
     */
    public static int IOPOL_NORMAL() {
        return IOPOL_NORMAL;
    }
    private static final int WAIT_ANY = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define WAIT_ANY -1
     * }
     */
    public static int WAIT_ANY() {
        return WAIT_ANY;
    }
    private static final int LITTLE_ENDIAN = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define LITTLE_ENDIAN 1234
     * }
     */
    public static int LITTLE_ENDIAN() {
        return LITTLE_ENDIAN;
    }
    private static final int BIG_ENDIAN = (int)4321L;
    /**
     * {@snippet lang=c :
     * #define BIG_ENDIAN 4321
     * }
     */
    public static int BIG_ENDIAN() {
        return BIG_ENDIAN;
    }
    private static final int PDP_ENDIAN = (int)3412L;
    /**
     * {@snippet lang=c :
     * #define PDP_ENDIAN 3412
     * }
     */
    public static int PDP_ENDIAN() {
        return PDP_ENDIAN;
    }
    private static final int __DARWIN_BYTE_ORDER = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_BYTE_ORDER 1234
     * }
     */
    public static int __DARWIN_BYTE_ORDER() {
        return __DARWIN_BYTE_ORDER;
    }
    private static final int BYTE_ORDER = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define BYTE_ORDER 1234
     * }
     */
    public static int BYTE_ORDER() {
        return BYTE_ORDER;
    }
    private static final MemorySegment NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define NULL (void*) 0
     * }
     */
    public static MemorySegment NULL() {
        return NULL;
    }
    private static final int MAC_OS_X_VERSION_MIN_REQUIRED = (int)150000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_MIN_REQUIRED 150000
     * }
     */
    public static int MAC_OS_X_VERSION_MIN_REQUIRED() {
        return MAC_OS_X_VERSION_MIN_REQUIRED;
    }
    private static final int MAC_OS_X_VERSION_MAX_ALLOWED = (int)150000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_MAX_ALLOWED 150000
     * }
     */
    public static int MAC_OS_X_VERSION_MAX_ALLOWED() {
        return MAC_OS_X_VERSION_MAX_ALLOWED;
    }
    private static final int __IPHONE_COMPAT_VERSION = (int)40000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_COMPAT_VERSION 40000
     * }
     */
    public static int __IPHONE_COMPAT_VERSION() {
        return __IPHONE_COMPAT_VERSION;
    }
    private static final int TARGET_ABI_USES_IOS_VALUES = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_ABI_USES_IOS_VALUES 1
     * }
     */
    public static int TARGET_ABI_USES_IOS_VALUES() {
        return TARGET_ABI_USES_IOS_VALUES;
    }
    private static final int TARGET_IPHONE_SIMULATOR = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IPHONE_SIMULATOR 0
     * }
     */
    public static int TARGET_IPHONE_SIMULATOR() {
        return TARGET_IPHONE_SIMULATOR;
    }
    private static final int TARGET_OS_NANO = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TARGET_OS_NANO 0
     * }
     */
    public static int TARGET_OS_NANO() {
        return TARGET_OS_NANO;
    }
    private static final long __DARWIN_NFDBITS = 32L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NFDBITS 32
     * }
     */
    public static long __DARWIN_NFDBITS() {
        return __DARWIN_NFDBITS;
    }
    private static final int NBBY = (int)8L;
    /**
     * {@snippet lang=c :
     * #define NBBY 8
     * }
     */
    public static int NBBY() {
        return NBBY;
    }
    private static final long NFDBITS = 32L;
    /**
     * {@snippet lang=c :
     * #define NFDBITS 32
     * }
     */
    public static long NFDBITS() {
        return NFDBITS;
    }
    private static final int FD_SETSIZE = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define FD_SETSIZE 1024
     * }
     */
    public static int FD_SETSIZE() {
        return FD_SETSIZE;
    }
    private static final boolean YES = true;
    /**
     * {@snippet lang=c :
     * #define YES 1
     * }
     */
    public static boolean YES() {
        return YES;
    }
    private static final boolean NO = false;
    /**
     * {@snippet lang=c :
     * #define NO 0
     * }
     */
    public static boolean NO() {
        return NO;
    }
    private static final MemorySegment Nil = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define Nil (void*) 0
     * }
     */
    public static MemorySegment Nil() {
        return Nil;
    }
    private static final MemorySegment nil = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define nil (void*) 0
     * }
     */
    public static MemorySegment nil() {
        return nil;
    }
    private static final MemorySegment OBJC_DYNAMIC_CLASSES = MemorySegment.ofAddress(-1L);
    /**
     * {@snippet lang=c :
     * #define OBJC_DYNAMIC_CLASSES (void*) -1
     * }
     */
    public static MemorySegment OBJC_DYNAMIC_CLASSES() {
        return OBJC_DYNAMIC_CLASSES;
    }
    private static final int _C_ID = (int)64L;
    /**
     * {@snippet lang=c :
     * #define _C_ID 64
     * }
     */
    public static int _C_ID() {
        return _C_ID;
    }
    private static final int _C_CLASS = (int)35L;
    /**
     * {@snippet lang=c :
     * #define _C_CLASS 35
     * }
     */
    public static int _C_CLASS() {
        return _C_CLASS;
    }
    private static final int _C_SEL = (int)58L;
    /**
     * {@snippet lang=c :
     * #define _C_SEL 58
     * }
     */
    public static int _C_SEL() {
        return _C_SEL;
    }
    private static final int _C_CHR = (int)99L;
    /**
     * {@snippet lang=c :
     * #define _C_CHR 99
     * }
     */
    public static int _C_CHR() {
        return _C_CHR;
    }
    private static final int _C_UCHR = (int)67L;
    /**
     * {@snippet lang=c :
     * #define _C_UCHR 67
     * }
     */
    public static int _C_UCHR() {
        return _C_UCHR;
    }
    private static final int _C_SHT = (int)115L;
    /**
     * {@snippet lang=c :
     * #define _C_SHT 115
     * }
     */
    public static int _C_SHT() {
        return _C_SHT;
    }
    private static final int _C_USHT = (int)83L;
    /**
     * {@snippet lang=c :
     * #define _C_USHT 83
     * }
     */
    public static int _C_USHT() {
        return _C_USHT;
    }
    private static final int _C_INT = (int)105L;
    /**
     * {@snippet lang=c :
     * #define _C_INT 105
     * }
     */
    public static int _C_INT() {
        return _C_INT;
    }
    private static final int _C_UINT = (int)73L;
    /**
     * {@snippet lang=c :
     * #define _C_UINT 73
     * }
     */
    public static int _C_UINT() {
        return _C_UINT;
    }
    private static final int _C_LNG = (int)108L;
    /**
     * {@snippet lang=c :
     * #define _C_LNG 108
     * }
     */
    public static int _C_LNG() {
        return _C_LNG;
    }
    private static final int _C_ULNG = (int)76L;
    /**
     * {@snippet lang=c :
     * #define _C_ULNG 76
     * }
     */
    public static int _C_ULNG() {
        return _C_ULNG;
    }
    private static final int _C_LNG_LNG = (int)113L;
    /**
     * {@snippet lang=c :
     * #define _C_LNG_LNG 113
     * }
     */
    public static int _C_LNG_LNG() {
        return _C_LNG_LNG;
    }
    private static final int _C_ULNG_LNG = (int)81L;
    /**
     * {@snippet lang=c :
     * #define _C_ULNG_LNG 81
     * }
     */
    public static int _C_ULNG_LNG() {
        return _C_ULNG_LNG;
    }
    private static final int _C_INT128 = (int)116L;
    /**
     * {@snippet lang=c :
     * #define _C_INT128 116
     * }
     */
    public static int _C_INT128() {
        return _C_INT128;
    }
    private static final int _C_UINT128 = (int)84L;
    /**
     * {@snippet lang=c :
     * #define _C_UINT128 84
     * }
     */
    public static int _C_UINT128() {
        return _C_UINT128;
    }
    private static final int _C_FLT = (int)102L;
    /**
     * {@snippet lang=c :
     * #define _C_FLT 102
     * }
     */
    public static int _C_FLT() {
        return _C_FLT;
    }
    private static final int _C_DBL = (int)100L;
    /**
     * {@snippet lang=c :
     * #define _C_DBL 100
     * }
     */
    public static int _C_DBL() {
        return _C_DBL;
    }
    private static final int _C_LNG_DBL = (int)68L;
    /**
     * {@snippet lang=c :
     * #define _C_LNG_DBL 68
     * }
     */
    public static int _C_LNG_DBL() {
        return _C_LNG_DBL;
    }
    private static final int _C_BFLD = (int)98L;
    /**
     * {@snippet lang=c :
     * #define _C_BFLD 98
     * }
     */
    public static int _C_BFLD() {
        return _C_BFLD;
    }
    private static final int _C_BOOL = (int)66L;
    /**
     * {@snippet lang=c :
     * #define _C_BOOL 66
     * }
     */
    public static int _C_BOOL() {
        return _C_BOOL;
    }
    private static final int _C_VOID = (int)118L;
    /**
     * {@snippet lang=c :
     * #define _C_VOID 118
     * }
     */
    public static int _C_VOID() {
        return _C_VOID;
    }
    private static final int _C_UNDEF = (int)63L;
    /**
     * {@snippet lang=c :
     * #define _C_UNDEF 63
     * }
     */
    public static int _C_UNDEF() {
        return _C_UNDEF;
    }
    private static final int _C_PTR = (int)94L;
    /**
     * {@snippet lang=c :
     * #define _C_PTR 94
     * }
     */
    public static int _C_PTR() {
        return _C_PTR;
    }
    private static final int _C_CHARPTR = (int)42L;
    /**
     * {@snippet lang=c :
     * #define _C_CHARPTR 42
     * }
     */
    public static int _C_CHARPTR() {
        return _C_CHARPTR;
    }
    private static final int _C_ATOM = (int)37L;
    /**
     * {@snippet lang=c :
     * #define _C_ATOM 37
     * }
     */
    public static int _C_ATOM() {
        return _C_ATOM;
    }
    private static final int _C_ARY_B = (int)91L;
    /**
     * {@snippet lang=c :
     * #define _C_ARY_B 91
     * }
     */
    public static int _C_ARY_B() {
        return _C_ARY_B;
    }
    private static final int _C_ARY_E = (int)93L;
    /**
     * {@snippet lang=c :
     * #define _C_ARY_E 93
     * }
     */
    public static int _C_ARY_E() {
        return _C_ARY_E;
    }
    private static final int _C_UNION_B = (int)40L;
    /**
     * {@snippet lang=c :
     * #define _C_UNION_B 40
     * }
     */
    public static int _C_UNION_B() {
        return _C_UNION_B;
    }
    private static final int _C_UNION_E = (int)41L;
    /**
     * {@snippet lang=c :
     * #define _C_UNION_E 41
     * }
     */
    public static int _C_UNION_E() {
        return _C_UNION_E;
    }
    private static final int _C_STRUCT_B = (int)123L;
    /**
     * {@snippet lang=c :
     * #define _C_STRUCT_B 123
     * }
     */
    public static int _C_STRUCT_B() {
        return _C_STRUCT_B;
    }
    private static final int _C_STRUCT_E = (int)125L;
    /**
     * {@snippet lang=c :
     * #define _C_STRUCT_E 125
     * }
     */
    public static int _C_STRUCT_E() {
        return _C_STRUCT_E;
    }
    private static final int _C_VECTOR = (int)33L;
    /**
     * {@snippet lang=c :
     * #define _C_VECTOR 33
     * }
     */
    public static int _C_VECTOR() {
        return _C_VECTOR;
    }
    private static final int _C_COMPLEX = (int)106L;
    /**
     * {@snippet lang=c :
     * #define _C_COMPLEX 106
     * }
     */
    public static int _C_COMPLEX() {
        return _C_COMPLEX;
    }
    private static final int _C_ATOMIC = (int)65L;
    /**
     * {@snippet lang=c :
     * #define _C_ATOMIC 65
     * }
     */
    public static int _C_ATOMIC() {
        return _C_ATOMIC;
    }
    private static final int _C_CONST = (int)114L;
    /**
     * {@snippet lang=c :
     * #define _C_CONST 114
     * }
     */
    public static int _C_CONST() {
        return _C_CONST;
    }
    private static final int _C_IN = (int)110L;
    /**
     * {@snippet lang=c :
     * #define _C_IN 110
     * }
     */
    public static int _C_IN() {
        return _C_IN;
    }
    private static final int _C_INOUT = (int)78L;
    /**
     * {@snippet lang=c :
     * #define _C_INOUT 78
     * }
     */
    public static int _C_INOUT() {
        return _C_INOUT;
    }
    private static final int _C_OUT = (int)111L;
    /**
     * {@snippet lang=c :
     * #define _C_OUT 111
     * }
     */
    public static int _C_OUT() {
        return _C_OUT;
    }
    private static final int _C_BYCOPY = (int)79L;
    /**
     * {@snippet lang=c :
     * #define _C_BYCOPY 79
     * }
     */
    public static int _C_BYCOPY() {
        return _C_BYCOPY;
    }
    private static final int _C_BYREF = (int)82L;
    /**
     * {@snippet lang=c :
     * #define _C_BYREF 82
     * }
     */
    public static int _C_BYREF() {
        return _C_BYREF;
    }
    private static final int _C_ONEWAY = (int)86L;
    /**
     * {@snippet lang=c :
     * #define _C_ONEWAY 86
     * }
     */
    public static int _C_ONEWAY() {
        return _C_ONEWAY;
    }
    private static final int _C_GNUREGISTER = (int)43L;
    /**
     * {@snippet lang=c :
     * #define _C_GNUREGISTER 43
     * }
     */
    public static int _C_GNUREGISTER() {
        return _C_GNUREGISTER;
    }
    private static final int MACH_PORT_DEAD = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_DEAD 4294967295
     * }
     */
    public static int MACH_PORT_DEAD() {
        return MACH_PORT_DEAD;
    }
    private static final int MACH_PORT_RIGHT_SEND = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_RIGHT_SEND 0
     * }
     */
    public static int MACH_PORT_RIGHT_SEND() {
        return MACH_PORT_RIGHT_SEND;
    }
    private static final int MACH_PORT_RIGHT_RECEIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_RIGHT_RECEIVE 1
     * }
     */
    public static int MACH_PORT_RIGHT_RECEIVE() {
        return MACH_PORT_RIGHT_RECEIVE;
    }
    private static final int MACH_PORT_RIGHT_SEND_ONCE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_RIGHT_SEND_ONCE 2
     * }
     */
    public static int MACH_PORT_RIGHT_SEND_ONCE() {
        return MACH_PORT_RIGHT_SEND_ONCE;
    }
    private static final int MACH_PORT_RIGHT_PORT_SET = (int)3L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_RIGHT_PORT_SET 3
     * }
     */
    public static int MACH_PORT_RIGHT_PORT_SET() {
        return MACH_PORT_RIGHT_PORT_SET;
    }
    private static final int MACH_PORT_RIGHT_DEAD_NAME = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_RIGHT_DEAD_NAME 4
     * }
     */
    public static int MACH_PORT_RIGHT_DEAD_NAME() {
        return MACH_PORT_RIGHT_DEAD_NAME;
    }
    private static final int MACH_PORT_RIGHT_LABELH = (int)5L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_RIGHT_LABELH 5
     * }
     */
    public static int MACH_PORT_RIGHT_LABELH() {
        return MACH_PORT_RIGHT_LABELH;
    }
    private static final int MACH_PORT_RIGHT_NUMBER = (int)6L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_RIGHT_NUMBER 6
     * }
     */
    public static int MACH_PORT_RIGHT_NUMBER() {
        return MACH_PORT_RIGHT_NUMBER;
    }
    private static final int MACH_PORT_TYPE_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_NONE 0
     * }
     */
    public static int MACH_PORT_TYPE_NONE() {
        return MACH_PORT_TYPE_NONE;
    }
    private static final int MACH_PORT_TYPE_SEND = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_SEND 65536
     * }
     */
    public static int MACH_PORT_TYPE_SEND() {
        return MACH_PORT_TYPE_SEND;
    }
    private static final int MACH_PORT_TYPE_RECEIVE = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_RECEIVE 131072
     * }
     */
    public static int MACH_PORT_TYPE_RECEIVE() {
        return MACH_PORT_TYPE_RECEIVE;
    }
    private static final int MACH_PORT_TYPE_SEND_ONCE = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_SEND_ONCE 262144
     * }
     */
    public static int MACH_PORT_TYPE_SEND_ONCE() {
        return MACH_PORT_TYPE_SEND_ONCE;
    }
    private static final int MACH_PORT_TYPE_PORT_SET = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_PORT_SET 524288
     * }
     */
    public static int MACH_PORT_TYPE_PORT_SET() {
        return MACH_PORT_TYPE_PORT_SET;
    }
    private static final int MACH_PORT_TYPE_DEAD_NAME = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_DEAD_NAME 1048576
     * }
     */
    public static int MACH_PORT_TYPE_DEAD_NAME() {
        return MACH_PORT_TYPE_DEAD_NAME;
    }
    private static final int MACH_PORT_TYPE_LABELH = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_LABELH 2097152
     * }
     */
    public static int MACH_PORT_TYPE_LABELH() {
        return MACH_PORT_TYPE_LABELH;
    }
    private static final int MACH_PORT_TYPE_DNREQUEST = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_DNREQUEST 2147483648
     * }
     */
    public static int MACH_PORT_TYPE_DNREQUEST() {
        return MACH_PORT_TYPE_DNREQUEST;
    }
    private static final int MACH_PORT_TYPE_SEND_RECEIVE = (int)196608L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_SEND_RECEIVE 196608
     * }
     */
    public static int MACH_PORT_TYPE_SEND_RECEIVE() {
        return MACH_PORT_TYPE_SEND_RECEIVE;
    }
    private static final int MACH_PORT_TYPE_SEND_RIGHTS = (int)327680L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_SEND_RIGHTS 327680
     * }
     */
    public static int MACH_PORT_TYPE_SEND_RIGHTS() {
        return MACH_PORT_TYPE_SEND_RIGHTS;
    }
    private static final int MACH_PORT_TYPE_PORT_RIGHTS = (int)458752L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_PORT_RIGHTS 458752
     * }
     */
    public static int MACH_PORT_TYPE_PORT_RIGHTS() {
        return MACH_PORT_TYPE_PORT_RIGHTS;
    }
    private static final int MACH_PORT_TYPE_PORT_OR_DEAD = (int)1507328L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_PORT_OR_DEAD 1507328
     * }
     */
    public static int MACH_PORT_TYPE_PORT_OR_DEAD() {
        return MACH_PORT_TYPE_PORT_OR_DEAD;
    }
    private static final int MACH_PORT_TYPE_ALL_RIGHTS = (int)2031616L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_ALL_RIGHTS 2031616
     * }
     */
    public static int MACH_PORT_TYPE_ALL_RIGHTS() {
        return MACH_PORT_TYPE_ALL_RIGHTS;
    }
    private static final int MACH_PORT_QLIMIT_ZERO = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_QLIMIT_ZERO 0
     * }
     */
    public static int MACH_PORT_QLIMIT_ZERO() {
        return MACH_PORT_QLIMIT_ZERO;
    }
    private static final int MACH_PORT_QLIMIT_BASIC = (int)5L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_QLIMIT_BASIC 5
     * }
     */
    public static int MACH_PORT_QLIMIT_BASIC() {
        return MACH_PORT_QLIMIT_BASIC;
    }
    private static final int MACH_PORT_QLIMIT_SMALL = (int)16L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_QLIMIT_SMALL 16
     * }
     */
    public static int MACH_PORT_QLIMIT_SMALL() {
        return MACH_PORT_QLIMIT_SMALL;
    }
    private static final int MACH_PORT_QLIMIT_LARGE = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_QLIMIT_LARGE 1024
     * }
     */
    public static int MACH_PORT_QLIMIT_LARGE() {
        return MACH_PORT_QLIMIT_LARGE;
    }
    private static final int MACH_PORT_QLIMIT_KERNEL = (int)65534L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_QLIMIT_KERNEL 65534
     * }
     */
    public static int MACH_PORT_QLIMIT_KERNEL() {
        return MACH_PORT_QLIMIT_KERNEL;
    }
    private static final int MACH_PORT_QLIMIT_MIN = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_QLIMIT_MIN 0
     * }
     */
    public static int MACH_PORT_QLIMIT_MIN() {
        return MACH_PORT_QLIMIT_MIN;
    }
    private static final int MACH_PORT_QLIMIT_DEFAULT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_QLIMIT_DEFAULT 5
     * }
     */
    public static int MACH_PORT_QLIMIT_DEFAULT() {
        return MACH_PORT_QLIMIT_DEFAULT;
    }
    private static final int MACH_PORT_QLIMIT_MAX = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_QLIMIT_MAX 1024
     * }
     */
    public static int MACH_PORT_QLIMIT_MAX() {
        return MACH_PORT_QLIMIT_MAX;
    }
    private static final int MACH_PORT_LIMITS_INFO_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_LIMITS_INFO_COUNT 1
     * }
     */
    public static int MACH_PORT_LIMITS_INFO_COUNT() {
        return MACH_PORT_LIMITS_INFO_COUNT;
    }
    private static final int MACH_PORT_RECEIVE_STATUS_COUNT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_RECEIVE_STATUS_COUNT 10
     * }
     */
    public static int MACH_PORT_RECEIVE_STATUS_COUNT() {
        return MACH_PORT_RECEIVE_STATUS_COUNT;
    }
    private static final int MACH_PORT_INFO_EXT_COUNT = (int)17L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_INFO_EXT_COUNT 17
     * }
     */
    public static int MACH_PORT_INFO_EXT_COUNT() {
        return MACH_PORT_INFO_EXT_COUNT;
    }
    private static final int MACH_PORT_GUARD_INFO_COUNT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_GUARD_INFO_COUNT 2
     * }
     */
    public static int MACH_PORT_GUARD_INFO_COUNT() {
        return MACH_PORT_GUARD_INFO_COUNT;
    }
    private static final byte MACH_SERVICE_PORT_INFO_COUNT = (byte)0L;
    /**
     * {@snippet lang=c :
     * #define MACH_SERVICE_PORT_INFO_COUNT 0
     * }
     */
    public static byte MACH_SERVICE_PORT_INFO_COUNT() {
        return MACH_SERVICE_PORT_INFO_COUNT;
    }
    private static final int MAX_FATAL_kGUARD_EXC_CODE = (int)128L;
    /**
     * {@snippet lang=c :
     * #define MAX_FATAL_kGUARD_EXC_CODE 128
     * }
     */
    public static int MAX_FATAL_kGUARD_EXC_CODE() {
        return MAX_FATAL_kGUARD_EXC_CODE;
    }
    private static final long MPG_FLAGS_NONE = 0L;
    /**
     * {@snippet lang=c :
     * #define MPG_FLAGS_NONE 0
     * }
     */
    public static long MPG_FLAGS_NONE() {
        return MPG_FLAGS_NONE;
    }
    private static final int MAX_OPTIONAL_kGUARD_EXC_CODE = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define MAX_OPTIONAL_kGUARD_EXC_CODE 524288
     * }
     */
    public static int MAX_OPTIONAL_kGUARD_EXC_CODE() {
        return MAX_OPTIONAL_kGUARD_EXC_CODE;
    }
    private static final long MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_DISP = 72057594037927936L;
    /**
     * {@snippet lang=c :
     * #define MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_DISP 72057594037927936
     * }
     */
    public static long MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_DISP() {
        return MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_DISP;
    }
    private static final long MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_PORT = 144115188075855872L;
    /**
     * {@snippet lang=c :
     * #define MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_PORT 144115188075855872
     * }
     */
    public static long MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_PORT() {
        return MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_PORT;
    }
    private static final long MPG_FLAGS_STRICT_REPLY_INVALID_VOUCHER = 288230376151711744L;
    /**
     * {@snippet lang=c :
     * #define MPG_FLAGS_STRICT_REPLY_INVALID_VOUCHER 288230376151711744
     * }
     */
    public static long MPG_FLAGS_STRICT_REPLY_INVALID_VOUCHER() {
        return MPG_FLAGS_STRICT_REPLY_INVALID_VOUCHER;
    }
    private static final long MPG_FLAGS_STRICT_REPLY_NO_BANK_ATTR = 576460752303423488L;
    /**
     * {@snippet lang=c :
     * #define MPG_FLAGS_STRICT_REPLY_NO_BANK_ATTR 576460752303423488
     * }
     */
    public static long MPG_FLAGS_STRICT_REPLY_NO_BANK_ATTR() {
        return MPG_FLAGS_STRICT_REPLY_NO_BANK_ATTR;
    }
    private static final long MPG_FLAGS_STRICT_REPLY_MISMATCHED_PERSONA = 1152921504606846976L;
    /**
     * {@snippet lang=c :
     * #define MPG_FLAGS_STRICT_REPLY_MISMATCHED_PERSONA 1152921504606846976
     * }
     */
    public static long MPG_FLAGS_STRICT_REPLY_MISMATCHED_PERSONA() {
        return MPG_FLAGS_STRICT_REPLY_MISMATCHED_PERSONA;
    }
    private static final long MPG_FLAGS_STRICT_REPLY_MASK = -72057594037927936L;
    /**
     * {@snippet lang=c :
     * #define MPG_FLAGS_STRICT_REPLY_MASK -72057594037927936
     * }
     */
    public static long MPG_FLAGS_STRICT_REPLY_MASK() {
        return MPG_FLAGS_STRICT_REPLY_MASK;
    }
    private static final long MPG_FLAGS_MOD_REFS_PINNED_DEALLOC = 72057594037927936L;
    /**
     * {@snippet lang=c :
     * #define MPG_FLAGS_MOD_REFS_PINNED_DEALLOC 72057594037927936
     * }
     */
    public static long MPG_FLAGS_MOD_REFS_PINNED_DEALLOC() {
        return MPG_FLAGS_MOD_REFS_PINNED_DEALLOC;
    }
    private static final long MPG_FLAGS_MOD_REFS_PINNED_DESTROY = 144115188075855872L;
    /**
     * {@snippet lang=c :
     * #define MPG_FLAGS_MOD_REFS_PINNED_DESTROY 144115188075855872
     * }
     */
    public static long MPG_FLAGS_MOD_REFS_PINNED_DESTROY() {
        return MPG_FLAGS_MOD_REFS_PINNED_DESTROY;
    }
    private static final long MPG_FLAGS_MOD_REFS_PINNED_COPYIN = 288230376151711744L;
    /**
     * {@snippet lang=c :
     * #define MPG_FLAGS_MOD_REFS_PINNED_COPYIN 288230376151711744
     * }
     */
    public static long MPG_FLAGS_MOD_REFS_PINNED_COPYIN() {
        return MPG_FLAGS_MOD_REFS_PINNED_COPYIN;
    }
    private static final long MPG_FLAGS_IMMOVABLE_PINNED = 72057594037927936L;
    /**
     * {@snippet lang=c :
     * #define MPG_FLAGS_IMMOVABLE_PINNED 72057594037927936
     * }
     */
    public static long MPG_FLAGS_IMMOVABLE_PINNED() {
        return MPG_FLAGS_IMMOVABLE_PINNED;
    }
    private static final int CLK_TCK = (int)100L;
    /**
     * {@snippet lang=c :
     * #define CLK_TCK 100
     * }
     */
    public static int CLK_TCK() {
        return CLK_TCK;
    }
    private static final int SCHAR_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define SCHAR_MIN -128
     * }
     */
    public static int SCHAR_MIN() {
        return SCHAR_MIN;
    }
    private static final int CHAR_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define CHAR_MIN -128
     * }
     */
    public static int CHAR_MIN() {
        return CHAR_MIN;
    }
    private static final int SHRT_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define SHRT_MIN -32768
     * }
     */
    public static int SHRT_MIN() {
        return SHRT_MIN;
    }
    private static final int UINT_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define UINT_MAX 4294967295
     * }
     */
    public static int UINT_MAX() {
        return UINT_MAX;
    }
    private static final int INT_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define INT_MIN -2147483648
     * }
     */
    public static int INT_MIN() {
        return INT_MIN;
    }
    private static final long ULONG_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define ULONG_MAX -1
     * }
     */
    public static long ULONG_MAX() {
        return ULONG_MAX;
    }
    private static final long LONG_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define LONG_MAX 9223372036854775807
     * }
     */
    public static long LONG_MAX() {
        return LONG_MAX;
    }
    private static final long LONG_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define LONG_MIN -9223372036854775808
     * }
     */
    public static long LONG_MIN() {
        return LONG_MIN;
    }
    private static final long ULLONG_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define ULLONG_MAX -1
     * }
     */
    public static long ULLONG_MAX() {
        return ULLONG_MAX;
    }
    private static final long LLONG_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define LLONG_MAX 9223372036854775807
     * }
     */
    public static long LLONG_MAX() {
        return LLONG_MAX;
    }
    private static final long LLONG_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define LLONG_MIN -9223372036854775808
     * }
     */
    public static long LLONG_MIN() {
        return LLONG_MIN;
    }
    private static final long SSIZE_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define SSIZE_MAX 9223372036854775807
     * }
     */
    public static long SSIZE_MAX() {
        return SSIZE_MAX;
    }
    private static final long SIZE_T_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define SIZE_T_MAX -1
     * }
     */
    public static long SIZE_T_MAX() {
        return SIZE_T_MAX;
    }
    private static final long UQUAD_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UQUAD_MAX -1
     * }
     */
    public static long UQUAD_MAX() {
        return UQUAD_MAX;
    }
    private static final long QUAD_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define QUAD_MAX 9223372036854775807
     * }
     */
    public static long QUAD_MAX() {
        return QUAD_MAX;
    }
    private static final long QUAD_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define QUAD_MIN -9223372036854775808
     * }
     */
    public static long QUAD_MIN() {
        return QUAD_MIN;
    }
    private static final int MACH_MSG_TIMEOUT_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TIMEOUT_NONE 0
     * }
     */
    public static int MACH_MSG_TIMEOUT_NONE() {
        return MACH_MSG_TIMEOUT_NONE;
    }
    private static final int MACH_MSGH_BITS_PORTS_MASK = (int)2039583L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_PORTS_MASK 2039583
     * }
     */
    public static int MACH_MSGH_BITS_PORTS_MASK() {
        return MACH_MSGH_BITS_PORTS_MASK;
    }
    private static final int MACH_MSGH_BITS_COMPLEX = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_COMPLEX 2147483648
     * }
     */
    public static int MACH_MSGH_BITS_COMPLEX() {
        return MACH_MSGH_BITS_COMPLEX;
    }
    private static final int MACH_MSGH_BITS_USER = (int)2149523231L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_USER 2149523231
     * }
     */
    public static int MACH_MSGH_BITS_USER() {
        return MACH_MSGH_BITS_USER;
    }
    private static final int MACH_MSGH_BITS_RAISEIMP = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_RAISEIMP 536870912
     * }
     */
    public static int MACH_MSGH_BITS_RAISEIMP() {
        return MACH_MSGH_BITS_RAISEIMP;
    }
    private static final int MACH_MSGH_BITS_DENAP = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_DENAP 536870912
     * }
     */
    public static int MACH_MSGH_BITS_DENAP() {
        return MACH_MSGH_BITS_DENAP;
    }
    private static final int MACH_MSGH_BITS_IMPHOLDASRT = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_IMPHOLDASRT 268435456
     * }
     */
    public static int MACH_MSGH_BITS_IMPHOLDASRT() {
        return MACH_MSGH_BITS_IMPHOLDASRT;
    }
    private static final int MACH_MSGH_BITS_DENAPHOLDASRT = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_DENAPHOLDASRT 268435456
     * }
     */
    public static int MACH_MSGH_BITS_DENAPHOLDASRT() {
        return MACH_MSGH_BITS_DENAPHOLDASRT;
    }
    private static final int MACH_MSGH_BITS_CIRCULAR = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_CIRCULAR 268435456
     * }
     */
    public static int MACH_MSGH_BITS_CIRCULAR() {
        return MACH_MSGH_BITS_CIRCULAR;
    }
    private static final int MACH_MSGH_BITS_USED = (int)2954829599L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_USED 2954829599
     * }
     */
    public static int MACH_MSGH_BITS_USED() {
        return MACH_MSGH_BITS_USED;
    }
    private static final MemorySegment MACH_MSG_SIZE_NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_SIZE_NULL (void*) 0
     * }
     */
    public static MemorySegment MACH_MSG_SIZE_NULL() {
        return MACH_MSG_SIZE_NULL;
    }
    private static final int MACH_MSG_PRIORITY_UNSPECIFIED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_PRIORITY_UNSPECIFIED 0
     * }
     */
    public static int MACH_MSG_PRIORITY_UNSPECIFIED() {
        return MACH_MSG_PRIORITY_UNSPECIFIED;
    }
    private static final int MACH_MSG_DESCRIPTOR_MAX = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_DESCRIPTOR_MAX 4
     * }
     */
    public static int MACH_MSG_DESCRIPTOR_MAX() {
        return MACH_MSG_DESCRIPTOR_MAX;
    }
    private static final MemorySegment MACH_MSG_BODY_NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_BODY_NULL (void*) 0
     * }
     */
    public static MemorySegment MACH_MSG_BODY_NULL() {
        return MACH_MSG_BODY_NULL;
    }
    private static final MemorySegment MACH_MSG_DESCRIPTOR_NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_DESCRIPTOR_NULL (void*) 0
     * }
     */
    public static MemorySegment MACH_MSG_DESCRIPTOR_NULL() {
        return MACH_MSG_DESCRIPTOR_NULL;
    }
    private static final MemorySegment MACH_MSG_NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_NULL (void*) 0
     * }
     */
    public static MemorySegment MACH_MSG_NULL() {
        return MACH_MSG_NULL;
    }
    private static final int MACH_MSG_FILTER_POLICY_ALLOW = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_FILTER_POLICY_ALLOW 0
     * }
     */
    public static int MACH_MSG_FILTER_POLICY_ALLOW() {
        return MACH_MSG_FILTER_POLICY_ALLOW;
    }
    private static final long MACH_MSG_TRAILER_MINIMUM_SIZE = 8L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TRAILER_MINIMUM_SIZE 8
     * }
     */
    public static long MACH_MSG_TRAILER_MINIMUM_SIZE() {
        return MACH_MSG_TRAILER_MINIMUM_SIZE;
    }
    private static final int MAX_TRAILER_SIZE = (int)68L;
    /**
     * {@snippet lang=c :
     * #define MAX_TRAILER_SIZE 68
     * }
     */
    public static int MAX_TRAILER_SIZE() {
        return MAX_TRAILER_SIZE;
    }
    private static final long MACH_MSG_TRAILER_FORMAT_0_SIZE = 20L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TRAILER_FORMAT_0_SIZE 20
     * }
     */
    public static long MACH_MSG_TRAILER_FORMAT_0_SIZE() {
        return MACH_MSG_TRAILER_FORMAT_0_SIZE;
    }
    private static final int MACH_MSG_SIZE_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_SIZE_MAX 4294967295
     * }
     */
    public static int MACH_MSG_SIZE_MAX() {
        return MACH_MSG_SIZE_MAX;
    }
    private static final int MACH_MSG_SIZE_RELIABLE = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_SIZE_RELIABLE 262144
     * }
     */
    public static int MACH_MSG_SIZE_RELIABLE() {
        return MACH_MSG_SIZE_RELIABLE;
    }
    private static final int MACH_MSG_TYPE_PORT_RECEIVE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TYPE_PORT_RECEIVE 16
     * }
     */
    public static int MACH_MSG_TYPE_PORT_RECEIVE() {
        return MACH_MSG_TYPE_PORT_RECEIVE;
    }
    private static final int MACH_MSG_TYPE_PORT_SEND = (int)17L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TYPE_PORT_SEND 17
     * }
     */
    public static int MACH_MSG_TYPE_PORT_SEND() {
        return MACH_MSG_TYPE_PORT_SEND;
    }
    private static final int MACH_MSG_TYPE_PORT_SEND_ONCE = (int)18L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TYPE_PORT_SEND_ONCE 18
     * }
     */
    public static int MACH_MSG_TYPE_PORT_SEND_ONCE() {
        return MACH_MSG_TYPE_PORT_SEND_ONCE;
    }
    private static final int MACH_MSG_TYPE_POLYMORPHIC = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TYPE_POLYMORPHIC 4294967295
     * }
     */
    public static int MACH_MSG_TYPE_POLYMORPHIC() {
        return MACH_MSG_TYPE_POLYMORPHIC;
    }
    private static final int MACH_SEND_NODENAP = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define MACH_SEND_NODENAP 262144
     * }
     */
    public static int MACH_SEND_NODENAP() {
        return MACH_SEND_NODENAP;
    }
    private static final int MACH_SEND_SYNC_USE_THRPRI = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define MACH_SEND_SYNC_USE_THRPRI 2097152
     * }
     */
    public static int MACH_SEND_SYNC_USE_THRPRI() {
        return MACH_SEND_SYNC_USE_THRPRI;
    }
    private static final int MACH_RCV_TRAILER_MASK = (int)251658240L;
    /**
     * {@snippet lang=c :
     * #define MACH_RCV_TRAILER_MASK 251658240
     * }
     */
    public static int MACH_RCV_TRAILER_MASK() {
        return MACH_RCV_TRAILER_MASK;
    }
    private static final int VM_FLAGS_ALIAS_MASK = (int)4278190080L;
    /**
     * {@snippet lang=c :
     * #define VM_FLAGS_ALIAS_MASK 4278190080
     * }
     */
    public static int VM_FLAGS_ALIAS_MASK() {
        return VM_FLAGS_ALIAS_MASK;
    }
    private static final int VM_FLAGS_HW = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define VM_FLAGS_HW 4096
     * }
     */
    public static int VM_FLAGS_HW() {
        return VM_FLAGS_HW;
    }
    private static final int VM_FLAGS_USER_ALLOCATE = (int)4278669471L;
    /**
     * {@snippet lang=c :
     * #define VM_FLAGS_USER_ALLOCATE 4278669471
     * }
     */
    public static int VM_FLAGS_USER_ALLOCATE() {
        return VM_FLAGS_USER_ALLOCATE;
    }
    private static final int VM_FLAGS_USER_MAP = (int)4288106655L;
    /**
     * {@snippet lang=c :
     * #define VM_FLAGS_USER_MAP 4288106655
     * }
     */
    public static int VM_FLAGS_USER_MAP() {
        return VM_FLAGS_USER_MAP;
    }
    private static final int VM_FLAGS_USER_REMAP = (int)1065065L;
    /**
     * {@snippet lang=c :
     * #define VM_FLAGS_USER_REMAP 1065065
     * }
     */
    public static int VM_FLAGS_USER_REMAP() {
        return VM_FLAGS_USER_REMAP;
    }
    private static final int VM_FLAGS_SUPERPAGE_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_FLAGS_SUPERPAGE_NONE 0
     * }
     */
    public static int VM_FLAGS_SUPERPAGE_NONE() {
        return VM_FLAGS_SUPERPAGE_NONE;
    }
    private static final int VM_FLAGS_SUPERPAGE_SIZE_ANY = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define VM_FLAGS_SUPERPAGE_SIZE_ANY 65536
     * }
     */
    public static int VM_FLAGS_SUPERPAGE_SIZE_ANY() {
        return VM_FLAGS_SUPERPAGE_SIZE_ANY;
    }
    private static final int VM_FLAGS_SUPERPAGE_SIZE_2MB = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define VM_FLAGS_SUPERPAGE_SIZE_2MB 131072
     * }
     */
    public static int VM_FLAGS_SUPERPAGE_SIZE_2MB() {
        return VM_FLAGS_SUPERPAGE_SIZE_2MB;
    }
    private static final int VM_LEDGER_TAG_UNCHANGED = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define VM_LEDGER_TAG_UNCHANGED -1
     * }
     */
    public static int VM_LEDGER_TAG_UNCHANGED() {
        return VM_LEDGER_TAG_UNCHANGED;
    }
    private static final int VM_LEDGER_FLAG_NO_FOOTPRINT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define VM_LEDGER_FLAG_NO_FOOTPRINT 1
     * }
     */
    public static int VM_LEDGER_FLAG_NO_FOOTPRINT() {
        return VM_LEDGER_FLAG_NO_FOOTPRINT;
    }
    private static final int VM_LEDGER_FLAG_NO_FOOTPRINT_FOR_DEBUG = (int)2L;
    /**
     * {@snippet lang=c :
     * #define VM_LEDGER_FLAG_NO_FOOTPRINT_FOR_DEBUG 2
     * }
     */
    public static int VM_LEDGER_FLAG_NO_FOOTPRINT_FOR_DEBUG() {
        return VM_LEDGER_FLAG_NO_FOOTPRINT_FOR_DEBUG;
    }
    private static final int VM_LEDGER_FLAG_FROM_KERNEL = (int)4L;
    /**
     * {@snippet lang=c :
     * #define VM_LEDGER_FLAG_FROM_KERNEL 4
     * }
     */
    public static int VM_LEDGER_FLAG_FROM_KERNEL() {
        return VM_LEDGER_FLAG_FROM_KERNEL;
    }
    private static final int VM_LEDGER_FLAGS_USER = (int)3L;
    /**
     * {@snippet lang=c :
     * #define VM_LEDGER_FLAGS_USER 3
     * }
     */
    public static int VM_LEDGER_FLAGS_USER() {
        return VM_LEDGER_FLAGS_USER;
    }
    private static final int VM_LEDGER_FLAGS_ALL = (int)7L;
    /**
     * {@snippet lang=c :
     * #define VM_LEDGER_FLAGS_ALL 7
     * }
     */
    public static int VM_LEDGER_FLAGS_ALL() {
        return VM_LEDGER_FLAGS_ALL;
    }
    private static final int VM_MEMORY_CARBON = (int)43L;
    /**
     * {@snippet lang=c :
     * #define VM_MEMORY_CARBON 43
     * }
     */
    public static int VM_MEMORY_CARBON() {
        return VM_MEMORY_CARBON;
    }
    private static final int VM_MEMORY_COREGRAPHICS_MISC = (int)42L;
    /**
     * {@snippet lang=c :
     * #define VM_MEMORY_COREGRAPHICS_MISC 42
     * }
     */
    public static int VM_MEMORY_COREGRAPHICS_MISC() {
        return VM_MEMORY_COREGRAPHICS_MISC;
    }
    private static final int VM_MEMORY_WEBASSEMBLY = (int)63L;
    /**
     * {@snippet lang=c :
     * #define VM_MEMORY_WEBASSEMBLY 63
     * }
     */
    public static int VM_MEMORY_WEBASSEMBLY() {
        return VM_MEMORY_WEBASSEMBLY;
    }
    private static final int TIME_MICROS_MAX = (int)1000000L;
    /**
     * {@snippet lang=c :
     * #define TIME_MICROS_MAX 1000000
     * }
     */
    public static int TIME_MICROS_MAX() {
        return TIME_MICROS_MAX;
    }
    private static final int VM_PROT_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_NONE 0
     * }
     */
    public static int VM_PROT_NONE() {
        return VM_PROT_NONE;
    }
    private static final int VM_PROT_READ = (int)1L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_READ 1
     * }
     */
    public static int VM_PROT_READ() {
        return VM_PROT_READ;
    }
    private static final int VM_PROT_WRITE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_WRITE 2
     * }
     */
    public static int VM_PROT_WRITE() {
        return VM_PROT_WRITE;
    }
    private static final int VM_PROT_EXECUTE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_EXECUTE 4
     * }
     */
    public static int VM_PROT_EXECUTE() {
        return VM_PROT_EXECUTE;
    }
    private static final int VM_PROT_DEFAULT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_DEFAULT 3
     * }
     */
    public static int VM_PROT_DEFAULT() {
        return VM_PROT_DEFAULT;
    }
    private static final int VM_PROT_ALL = (int)7L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_ALL 7
     * }
     */
    public static int VM_PROT_ALL() {
        return VM_PROT_ALL;
    }
    private static final int VM_PROT_RORW_TP = (int)4L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_RORW_TP 4
     * }
     */
    public static int VM_PROT_RORW_TP() {
        return VM_PROT_RORW_TP;
    }
    private static final int VM_PROT_NO_CHANGE_LEGACY = (int)8L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_NO_CHANGE_LEGACY 8
     * }
     */
    public static int VM_PROT_NO_CHANGE_LEGACY() {
        return VM_PROT_NO_CHANGE_LEGACY;
    }
    private static final int VM_PROT_NO_CHANGE = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_NO_CHANGE 16777216
     * }
     */
    public static int VM_PROT_NO_CHANGE() {
        return VM_PROT_NO_CHANGE;
    }
    private static final int VM_PROT_COPY = (int)16L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_COPY 16
     * }
     */
    public static int VM_PROT_COPY() {
        return VM_PROT_COPY;
    }
    private static final int VM_PROT_WANTS_COPY = (int)16L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_WANTS_COPY 16
     * }
     */
    public static int VM_PROT_WANTS_COPY() {
        return VM_PROT_WANTS_COPY;
    }
    private static final int VM_PROT_IS_MASK = (int)64L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_IS_MASK 64
     * }
     */
    public static int VM_PROT_IS_MASK() {
        return VM_PROT_IS_MASK;
    }
    private static final int VM_PROT_STRIP_READ = (int)128L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_STRIP_READ 128
     * }
     */
    public static int VM_PROT_STRIP_READ() {
        return VM_PROT_STRIP_READ;
    }
    private static final int VM_PROT_EXECUTE_ONLY = (int)132L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_EXECUTE_ONLY 132
     * }
     */
    public static int VM_PROT_EXECUTE_ONLY() {
        return VM_PROT_EXECUTE_ONLY;
    }
    private static final int VM_PROT_TPRO = (int)512L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_TPRO 512
     * }
     */
    public static int VM_PROT_TPRO() {
        return VM_PROT_TPRO;
    }
    private static final int VM_PROT_ALLEXEC = (int)4L;
    /**
     * {@snippet lang=c :
     * #define VM_PROT_ALLEXEC 4
     * }
     */
    public static int VM_PROT_ALLEXEC() {
        return VM_PROT_ALLEXEC;
    }
    private static final int VM_SYNC_ASYNCHRONOUS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define VM_SYNC_ASYNCHRONOUS 1
     * }
     */
    public static int VM_SYNC_ASYNCHRONOUS() {
        return VM_SYNC_ASYNCHRONOUS;
    }
    private static final int VM_SYNC_SYNCHRONOUS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define VM_SYNC_SYNCHRONOUS 2
     * }
     */
    public static int VM_SYNC_SYNCHRONOUS() {
        return VM_SYNC_SYNCHRONOUS;
    }
    private static final int VM_SYNC_INVALIDATE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define VM_SYNC_INVALIDATE 4
     * }
     */
    public static int VM_SYNC_INVALIDATE() {
        return VM_SYNC_INVALIDATE;
    }
    private static final int VM_SYNC_KILLPAGES = (int)8L;
    /**
     * {@snippet lang=c :
     * #define VM_SYNC_KILLPAGES 8
     * }
     */
    public static int VM_SYNC_KILLPAGES() {
        return VM_SYNC_KILLPAGES;
    }
    private static final int VM_SYNC_DEACTIVATE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define VM_SYNC_DEACTIVATE 16
     * }
     */
    public static int VM_SYNC_DEACTIVATE() {
        return VM_SYNC_DEACTIVATE;
    }
    private static final int VM_SYNC_CONTIGUOUS = (int)32L;
    /**
     * {@snippet lang=c :
     * #define VM_SYNC_CONTIGUOUS 32
     * }
     */
    public static int VM_SYNC_CONTIGUOUS() {
        return VM_SYNC_CONTIGUOUS;
    }
    private static final int VM_SYNC_REUSABLEPAGES = (int)64L;
    /**
     * {@snippet lang=c :
     * #define VM_SYNC_REUSABLEPAGES 64
     * }
     */
    public static int VM_SYNC_REUSABLEPAGES() {
        return VM_SYNC_REUSABLEPAGES;
    }
    private static final int PPNUM_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define PPNUM_MAX 4294967295
     * }
     */
    public static int PPNUM_MAX() {
        return PPNUM_MAX;
    }
    private static final int VM_MAP_NULL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_MAP_NULL 0
     * }
     */
    public static int VM_MAP_NULL() {
        return VM_MAP_NULL;
    }
    private static final int VM_MAP_INSPECT_NULL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_MAP_INSPECT_NULL 0
     * }
     */
    public static int VM_MAP_INSPECT_NULL() {
        return VM_MAP_INSPECT_NULL;
    }
    private static final int VM_MAP_READ_NULL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_MAP_READ_NULL 0
     * }
     */
    public static int VM_MAP_READ_NULL() {
        return VM_MAP_READ_NULL;
    }
    private static final int UPL_NULL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define UPL_NULL 0
     * }
     */
    public static int UPL_NULL() {
        return UPL_NULL;
    }
    private static final int VM_NAMED_ENTRY_NULL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_NAMED_ENTRY_NULL 0
     * }
     */
    public static int VM_NAMED_ENTRY_NULL() {
        return VM_NAMED_ENTRY_NULL;
    }
    private static final int MACH_VM_RANGE_FLAVOR_DEFAULT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MACH_VM_RANGE_FLAVOR_DEFAULT 1
     * }
     */
    public static int MACH_VM_RANGE_FLAVOR_DEFAULT() {
        return MACH_VM_RANGE_FLAVOR_DEFAULT;
    }
    private static final int MEMORY_OBJECT_NULL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MEMORY_OBJECT_NULL 0
     * }
     */
    public static int MEMORY_OBJECT_NULL() {
        return MEMORY_OBJECT_NULL;
    }
    private static final int MEMORY_OBJECT_CONTROL_NULL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MEMORY_OBJECT_CONTROL_NULL 0
     * }
     */
    public static int MEMORY_OBJECT_CONTROL_NULL() {
        return MEMORY_OBJECT_CONTROL_NULL;
    }
    private static final int MEMORY_OBJECT_NAME_NULL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MEMORY_OBJECT_NAME_NULL 0
     * }
     */
    public static int MEMORY_OBJECT_NAME_NULL() {
        return MEMORY_OBJECT_NAME_NULL;
    }
    private static final int MEMORY_OBJECT_DEFAULT_NULL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MEMORY_OBJECT_DEFAULT_NULL 0
     * }
     */
    public static int MEMORY_OBJECT_DEFAULT_NULL() {
        return MEMORY_OBJECT_DEFAULT_NULL;
    }
    private static final int MEMORY_OBJECT_INFO_MAX = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define MEMORY_OBJECT_INFO_MAX 1024
     * }
     */
    public static int MEMORY_OBJECT_INFO_MAX() {
        return MEMORY_OBJECT_INFO_MAX;
    }
    private static final int MEMORY_OBJECT_BEHAVE_INFO_COUNT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define MEMORY_OBJECT_BEHAVE_INFO_COUNT 5
     * }
     */
    public static int MEMORY_OBJECT_BEHAVE_INFO_COUNT() {
        return MEMORY_OBJECT_BEHAVE_INFO_COUNT;
    }
    private static final int MEMORY_OBJECT_PERF_INFO_COUNT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MEMORY_OBJECT_PERF_INFO_COUNT 2
     * }
     */
    public static int MEMORY_OBJECT_PERF_INFO_COUNT() {
        return MEMORY_OBJECT_PERF_INFO_COUNT;
    }
    private static final int MEMORY_OBJECT_ATTR_INFO_COUNT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MEMORY_OBJECT_ATTR_INFO_COUNT 4
     * }
     */
    public static int MEMORY_OBJECT_ATTR_INFO_COUNT() {
        return MEMORY_OBJECT_ATTR_INFO_COUNT;
    }
    private static final int MAP_MEM_FLAGS_USER = (int)16769024L;
    /**
     * {@snippet lang=c :
     * #define MAP_MEM_FLAGS_USER 16769024
     * }
     */
    public static int MAP_MEM_FLAGS_USER() {
        return MAP_MEM_FLAGS_USER;
    }
    private static final int MAP_MEM_FLAGS_ALL = (int)16769024L;
    /**
     * {@snippet lang=c :
     * #define MAP_MEM_FLAGS_ALL 16769024
     * }
     */
    public static int MAP_MEM_FLAGS_ALL() {
        return MAP_MEM_FLAGS_ALL;
    }
    private static final int MACH_EXCEPTION_CODES = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define MACH_EXCEPTION_CODES 2147483648
     * }
     */
    public static int MACH_EXCEPTION_CODES() {
        return MACH_EXCEPTION_CODES;
    }
    private static final int MACH_EXCEPTION_MASK = (int)3758096384L;
    /**
     * {@snippet lang=c :
     * #define MACH_EXCEPTION_MASK 3758096384
     * }
     */
    public static int MACH_EXCEPTION_MASK() {
        return MACH_EXCEPTION_MASK;
    }
    private static final int EXC_MASK_BAD_ACCESS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_BAD_ACCESS 2
     * }
     */
    public static int EXC_MASK_BAD_ACCESS() {
        return EXC_MASK_BAD_ACCESS;
    }
    private static final int EXC_MASK_BAD_INSTRUCTION = (int)4L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_BAD_INSTRUCTION 4
     * }
     */
    public static int EXC_MASK_BAD_INSTRUCTION() {
        return EXC_MASK_BAD_INSTRUCTION;
    }
    private static final int EXC_MASK_ARITHMETIC = (int)8L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_ARITHMETIC 8
     * }
     */
    public static int EXC_MASK_ARITHMETIC() {
        return EXC_MASK_ARITHMETIC;
    }
    private static final int EXC_MASK_EMULATION = (int)16L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_EMULATION 16
     * }
     */
    public static int EXC_MASK_EMULATION() {
        return EXC_MASK_EMULATION;
    }
    private static final int EXC_MASK_SOFTWARE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_SOFTWARE 32
     * }
     */
    public static int EXC_MASK_SOFTWARE() {
        return EXC_MASK_SOFTWARE;
    }
    private static final int EXC_MASK_BREAKPOINT = (int)64L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_BREAKPOINT 64
     * }
     */
    public static int EXC_MASK_BREAKPOINT() {
        return EXC_MASK_BREAKPOINT;
    }
    private static final int EXC_MASK_SYSCALL = (int)128L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_SYSCALL 128
     * }
     */
    public static int EXC_MASK_SYSCALL() {
        return EXC_MASK_SYSCALL;
    }
    private static final int EXC_MASK_MACH_SYSCALL = (int)256L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_MACH_SYSCALL 256
     * }
     */
    public static int EXC_MASK_MACH_SYSCALL() {
        return EXC_MASK_MACH_SYSCALL;
    }
    private static final int EXC_MASK_RPC_ALERT = (int)512L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_RPC_ALERT 512
     * }
     */
    public static int EXC_MASK_RPC_ALERT() {
        return EXC_MASK_RPC_ALERT;
    }
    private static final int EXC_MASK_CRASH = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_CRASH 1024
     * }
     */
    public static int EXC_MASK_CRASH() {
        return EXC_MASK_CRASH;
    }
    private static final int EXC_MASK_RESOURCE = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_RESOURCE 2048
     * }
     */
    public static int EXC_MASK_RESOURCE() {
        return EXC_MASK_RESOURCE;
    }
    private static final int EXC_MASK_GUARD = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_GUARD 4096
     * }
     */
    public static int EXC_MASK_GUARD() {
        return EXC_MASK_GUARD;
    }
    private static final int EXC_MASK_CORPSE_NOTIFY = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_CORPSE_NOTIFY 8192
     * }
     */
    public static int EXC_MASK_CORPSE_NOTIFY() {
        return EXC_MASK_CORPSE_NOTIFY;
    }
    private static final int EXC_MASK_ALL = (int)7166L;
    /**
     * {@snippet lang=c :
     * #define EXC_MASK_ALL 7166
     * }
     */
    public static int EXC_MASK_ALL() {
        return EXC_MASK_ALL;
    }
    private static final int PROCESSOR_CPU_STAT_COUNT = (int)9L;
    /**
     * {@snippet lang=c :
     * #define PROCESSOR_CPU_STAT_COUNT 9
     * }
     */
    public static int PROCESSOR_CPU_STAT_COUNT() {
        return PROCESSOR_CPU_STAT_COUNT;
    }
    private static final int PROCESSOR_CPU_STAT64_COUNT = (int)20L;
    /**
     * {@snippet lang=c :
     * #define PROCESSOR_CPU_STAT64_COUNT 20
     * }
     */
    public static int PROCESSOR_CPU_STAT64_COUNT() {
        return PROCESSOR_CPU_STAT64_COUNT;
    }
    private static final int PROCESSOR_INFO_MAX = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define PROCESSOR_INFO_MAX 1024
     * }
     */
    public static int PROCESSOR_INFO_MAX() {
        return PROCESSOR_INFO_MAX;
    }
    private static final int PROCESSOR_SET_INFO_MAX = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define PROCESSOR_SET_INFO_MAX 1024
     * }
     */
    public static int PROCESSOR_SET_INFO_MAX() {
        return PROCESSOR_SET_INFO_MAX;
    }
    private static final int PROCESSOR_BASIC_INFO_COUNT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define PROCESSOR_BASIC_INFO_COUNT 5
     * }
     */
    public static int PROCESSOR_BASIC_INFO_COUNT() {
        return PROCESSOR_BASIC_INFO_COUNT;
    }
    private static final int PROCESSOR_CPU_LOAD_INFO_COUNT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PROCESSOR_CPU_LOAD_INFO_COUNT 4
     * }
     */
    public static int PROCESSOR_CPU_LOAD_INFO_COUNT() {
        return PROCESSOR_CPU_LOAD_INFO_COUNT;
    }
    private static final int PROCESSOR_SET_BASIC_INFO_COUNT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PROCESSOR_SET_BASIC_INFO_COUNT 2
     * }
     */
    public static int PROCESSOR_SET_BASIC_INFO_COUNT() {
        return PROCESSOR_SET_BASIC_INFO_COUNT;
    }
    private static final int PROCESSOR_SET_LOAD_INFO_COUNT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PROCESSOR_SET_LOAD_INFO_COUNT 4
     * }
     */
    public static int PROCESSOR_SET_LOAD_INFO_COUNT() {
        return PROCESSOR_SET_LOAD_INFO_COUNT;
    }
    private static final int POLICYCLASS_FIXEDPRI = (int)6L;
    /**
     * {@snippet lang=c :
     * #define POLICYCLASS_FIXEDPRI 6
     * }
     */
    public static int POLICYCLASS_FIXEDPRI() {
        return POLICYCLASS_FIXEDPRI;
    }
    private static final int POLICY_TIMESHARE_BASE_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define POLICY_TIMESHARE_BASE_COUNT 1
     * }
     */
    public static int POLICY_TIMESHARE_BASE_COUNT() {
        return POLICY_TIMESHARE_BASE_COUNT;
    }
    private static final int POLICY_TIMESHARE_LIMIT_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define POLICY_TIMESHARE_LIMIT_COUNT 1
     * }
     */
    public static int POLICY_TIMESHARE_LIMIT_COUNT() {
        return POLICY_TIMESHARE_LIMIT_COUNT;
    }
    private static final int POLICY_TIMESHARE_INFO_COUNT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define POLICY_TIMESHARE_INFO_COUNT 5
     * }
     */
    public static int POLICY_TIMESHARE_INFO_COUNT() {
        return POLICY_TIMESHARE_INFO_COUNT;
    }
    private static final int POLICY_RR_BASE_COUNT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define POLICY_RR_BASE_COUNT 2
     * }
     */
    public static int POLICY_RR_BASE_COUNT() {
        return POLICY_RR_BASE_COUNT;
    }
    private static final int POLICY_RR_LIMIT_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define POLICY_RR_LIMIT_COUNT 1
     * }
     */
    public static int POLICY_RR_LIMIT_COUNT() {
        return POLICY_RR_LIMIT_COUNT;
    }
    private static final int POLICY_RR_INFO_COUNT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define POLICY_RR_INFO_COUNT 5
     * }
     */
    public static int POLICY_RR_INFO_COUNT() {
        return POLICY_RR_INFO_COUNT;
    }
    private static final int POLICY_FIFO_BASE_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define POLICY_FIFO_BASE_COUNT 1
     * }
     */
    public static int POLICY_FIFO_BASE_COUNT() {
        return POLICY_FIFO_BASE_COUNT;
    }
    private static final int POLICY_FIFO_LIMIT_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define POLICY_FIFO_LIMIT_COUNT 1
     * }
     */
    public static int POLICY_FIFO_LIMIT_COUNT() {
        return POLICY_FIFO_LIMIT_COUNT;
    }
    private static final int POLICY_FIFO_INFO_COUNT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define POLICY_FIFO_INFO_COUNT 4
     * }
     */
    public static int POLICY_FIFO_INFO_COUNT() {
        return POLICY_FIFO_INFO_COUNT;
    }
    private static final int TASK_INFO_MAX = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define TASK_INFO_MAX 1024
     * }
     */
    public static int TASK_INFO_MAX() {
        return TASK_INFO_MAX;
    }
    private static final long TASK_BASIC_INFO_32_COUNT = 8L;
    /**
     * {@snippet lang=c :
     * #define TASK_BASIC_INFO_32_COUNT 8
     * }
     */
    public static long TASK_BASIC_INFO_32_COUNT() {
        return TASK_BASIC_INFO_32_COUNT;
    }
    private static final int TASK_BASIC_INFO_64 = (int)18L;
    /**
     * {@snippet lang=c :
     * #define TASK_BASIC_INFO_64 18
     * }
     */
    public static int TASK_BASIC_INFO_64() {
        return TASK_BASIC_INFO_64;
    }
    private static final long TASK_BASIC_INFO_64_COUNT = 10L;
    /**
     * {@snippet lang=c :
     * #define TASK_BASIC_INFO_64_COUNT 10
     * }
     */
    public static long TASK_BASIC_INFO_64_COUNT() {
        return TASK_BASIC_INFO_64_COUNT;
    }
    private static final long TASK_BASIC_INFO_COUNT = 10L;
    /**
     * {@snippet lang=c :
     * #define TASK_BASIC_INFO_COUNT 10
     * }
     */
    public static long TASK_BASIC_INFO_COUNT() {
        return TASK_BASIC_INFO_COUNT;
    }
    private static final int TASK_BASIC_INFO = (int)18L;
    /**
     * {@snippet lang=c :
     * #define TASK_BASIC_INFO 18
     * }
     */
    public static int TASK_BASIC_INFO() {
        return TASK_BASIC_INFO;
    }
    private static final int TASK_EVENTS_INFO_COUNT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define TASK_EVENTS_INFO_COUNT 8
     * }
     */
    public static int TASK_EVENTS_INFO_COUNT() {
        return TASK_EVENTS_INFO_COUNT;
    }
    private static final int TASK_THREAD_TIMES_INFO_COUNT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TASK_THREAD_TIMES_INFO_COUNT 4
     * }
     */
    public static int TASK_THREAD_TIMES_INFO_COUNT() {
        return TASK_THREAD_TIMES_INFO_COUNT;
    }
    private static final int TASK_ABSOLUTETIME_INFO_COUNT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define TASK_ABSOLUTETIME_INFO_COUNT 8
     * }
     */
    public static int TASK_ABSOLUTETIME_INFO_COUNT() {
        return TASK_ABSOLUTETIME_INFO_COUNT;
    }
    private static final int TASK_KERNELMEMORY_INFO_COUNT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define TASK_KERNELMEMORY_INFO_COUNT 8
     * }
     */
    public static int TASK_KERNELMEMORY_INFO_COUNT() {
        return TASK_KERNELMEMORY_INFO_COUNT;
    }
    private static final int TASK_SECURITY_TOKEN_COUNT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TASK_SECURITY_TOKEN_COUNT 2
     * }
     */
    public static int TASK_SECURITY_TOKEN_COUNT() {
        return TASK_SECURITY_TOKEN_COUNT;
    }
    private static final long TASK_AUDIT_TOKEN_COUNT = 8L;
    /**
     * {@snippet lang=c :
     * #define TASK_AUDIT_TOKEN_COUNT 8
     * }
     */
    public static long TASK_AUDIT_TOKEN_COUNT() {
        return TASK_AUDIT_TOKEN_COUNT;
    }
    private static final long TASK_AFFINITY_TAG_INFO_COUNT = 4L;
    /**
     * {@snippet lang=c :
     * #define TASK_AFFINITY_TAG_INFO_COUNT 4
     * }
     */
    public static long TASK_AFFINITY_TAG_INFO_COUNT() {
        return TASK_AFFINITY_TAG_INFO_COUNT;
    }
    private static final long TASK_DYLD_INFO_COUNT = 5L;
    /**
     * {@snippet lang=c :
     * #define TASK_DYLD_INFO_COUNT 5
     * }
     */
    public static long TASK_DYLD_INFO_COUNT() {
        return TASK_DYLD_INFO_COUNT;
    }
    private static final long TASK_BASIC_INFO_64_2_COUNT = 10L;
    /**
     * {@snippet lang=c :
     * #define TASK_BASIC_INFO_64_2_COUNT 10
     * }
     */
    public static long TASK_BASIC_INFO_64_2_COUNT() {
        return TASK_BASIC_INFO_64_2_COUNT;
    }
    private static final long TASK_EXTMOD_INFO_COUNT = 16L;
    /**
     * {@snippet lang=c :
     * #define TASK_EXTMOD_INFO_COUNT 16
     * }
     */
    public static long TASK_EXTMOD_INFO_COUNT() {
        return TASK_EXTMOD_INFO_COUNT;
    }
    private static final long MACH_TASK_BASIC_INFO_COUNT = 12L;
    /**
     * {@snippet lang=c :
     * #define MACH_TASK_BASIC_INFO_COUNT 12
     * }
     */
    public static long MACH_TASK_BASIC_INFO_COUNT() {
        return MACH_TASK_BASIC_INFO_COUNT;
    }
    private static final int TASK_POWER_INFO_COUNT = (int)12L;
    /**
     * {@snippet lang=c :
     * #define TASK_POWER_INFO_COUNT 12
     * }
     */
    public static int TASK_POWER_INFO_COUNT() {
        return TASK_POWER_INFO_COUNT;
    }
    private static final int TASK_VM_INFO_COUNT = (int)93L;
    /**
     * {@snippet lang=c :
     * #define TASK_VM_INFO_COUNT 93
     * }
     */
    public static int TASK_VM_INFO_COUNT() {
        return TASK_VM_INFO_COUNT;
    }
    private static final int TASK_VM_INFO_REV7_COUNT = (int)93L;
    /**
     * {@snippet lang=c :
     * #define TASK_VM_INFO_REV7_COUNT 93
     * }
     */
    public static int TASK_VM_INFO_REV7_COUNT() {
        return TASK_VM_INFO_REV7_COUNT;
    }
    private static final int TASK_VM_INFO_REV6_COUNT = (int)89L;
    /**
     * {@snippet lang=c :
     * #define TASK_VM_INFO_REV6_COUNT 89
     * }
     */
    public static int TASK_VM_INFO_REV6_COUNT() {
        return TASK_VM_INFO_REV6_COUNT;
    }
    private static final int TASK_VM_INFO_REV5_COUNT = (int)87L;
    /**
     * {@snippet lang=c :
     * #define TASK_VM_INFO_REV5_COUNT 87
     * }
     */
    public static int TASK_VM_INFO_REV5_COUNT() {
        return TASK_VM_INFO_REV5_COUNT;
    }
    private static final int TASK_VM_INFO_REV4_COUNT = (int)86L;
    /**
     * {@snippet lang=c :
     * #define TASK_VM_INFO_REV4_COUNT 86
     * }
     */
    public static int TASK_VM_INFO_REV4_COUNT() {
        return TASK_VM_INFO_REV4_COUNT;
    }
    private static final int TASK_VM_INFO_REV3_COUNT = (int)84L;
    /**
     * {@snippet lang=c :
     * #define TASK_VM_INFO_REV3_COUNT 84
     * }
     */
    public static int TASK_VM_INFO_REV3_COUNT() {
        return TASK_VM_INFO_REV3_COUNT;
    }
    private static final int TASK_VM_INFO_REV2_COUNT = (int)42L;
    /**
     * {@snippet lang=c :
     * #define TASK_VM_INFO_REV2_COUNT 42
     * }
     */
    public static int TASK_VM_INFO_REV2_COUNT() {
        return TASK_VM_INFO_REV2_COUNT;
    }
    private static final int TASK_VM_INFO_REV1_COUNT = (int)38L;
    /**
     * {@snippet lang=c :
     * #define TASK_VM_INFO_REV1_COUNT 38
     * }
     */
    public static int TASK_VM_INFO_REV1_COUNT() {
        return TASK_VM_INFO_REV1_COUNT;
    }
    private static final int TASK_VM_INFO_REV0_COUNT = (int)36L;
    /**
     * {@snippet lang=c :
     * #define TASK_VM_INFO_REV0_COUNT 36
     * }
     */
    public static int TASK_VM_INFO_REV0_COUNT() {
        return TASK_VM_INFO_REV0_COUNT;
    }
    private static final int TASK_TRACE_MEMORY_INFO_COUNT = (int)6L;
    /**
     * {@snippet lang=c :
     * #define TASK_TRACE_MEMORY_INFO_COUNT 6
     * }
     */
    public static int TASK_TRACE_MEMORY_INFO_COUNT() {
        return TASK_TRACE_MEMORY_INFO_COUNT;
    }
    private static final int TASK_WAIT_STATE_INFO_COUNT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define TASK_WAIT_STATE_INFO_COUNT 8
     * }
     */
    public static int TASK_WAIT_STATE_INFO_COUNT() {
        return TASK_WAIT_STATE_INFO_COUNT;
    }
    private static final long TASK_POWER_INFO_V2_COUNT_OLD = 22L;
    /**
     * {@snippet lang=c :
     * #define TASK_POWER_INFO_V2_COUNT_OLD 22
     * }
     */
    public static long TASK_POWER_INFO_V2_COUNT_OLD() {
        return TASK_POWER_INFO_V2_COUNT_OLD;
    }
    private static final int TASK_POWER_INFO_V2_COUNT = (int)26L;
    /**
     * {@snippet lang=c :
     * #define TASK_POWER_INFO_V2_COUNT 26
     * }
     */
    public static int TASK_POWER_INFO_V2_COUNT() {
        return TASK_POWER_INFO_V2_COUNT;
    }
    private static final int TASK_FLAGS_INFO_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TASK_FLAGS_INFO_COUNT 1
     * }
     */
    public static int TASK_FLAGS_INFO_COUNT() {
        return TASK_FLAGS_INFO_COUNT;
    }
    private static final long TASK_INSPECT_BASIC_COUNTS_COUNT = 4L;
    /**
     * {@snippet lang=c :
     * #define TASK_INSPECT_BASIC_COUNTS_COUNT 4
     * }
     */
    public static long TASK_INSPECT_BASIC_COUNTS_COUNT() {
        return TASK_INSPECT_BASIC_COUNTS_COUNT;
    }
    private static final int TASK_CATEGORY_POLICY_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TASK_CATEGORY_POLICY_COUNT 1
     * }
     */
    public static int TASK_CATEGORY_POLICY_COUNT() {
        return TASK_CATEGORY_POLICY_COUNT;
    }
    private static final int LATENCY_QOS_LAUNCH_DEFAULT_TIER = (int)16711684L;
    /**
     * {@snippet lang=c :
     * #define LATENCY_QOS_LAUNCH_DEFAULT_TIER 16711684
     * }
     */
    public static int LATENCY_QOS_LAUNCH_DEFAULT_TIER() {
        return LATENCY_QOS_LAUNCH_DEFAULT_TIER;
    }
    private static final int THROUGHPUT_QOS_LAUNCH_DEFAULT_TIER = (int)16646148L;
    /**
     * {@snippet lang=c :
     * #define THROUGHPUT_QOS_LAUNCH_DEFAULT_TIER 16646148
     * }
     */
    public static int THROUGHPUT_QOS_LAUNCH_DEFAULT_TIER() {
        return THROUGHPUT_QOS_LAUNCH_DEFAULT_TIER;
    }
    private static final int TASK_QOS_POLICY_COUNT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TASK_QOS_POLICY_COUNT 2
     * }
     */
    public static int TASK_QOS_POLICY_COUNT() {
        return TASK_QOS_POLICY_COUNT;
    }
    private static final int PROC_FLAG_IOS_APPLICATION = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define PROC_FLAG_IOS_APPLICATION 16777216
     * }
     */
    public static int PROC_FLAG_IOS_APPLICATION() {
        return PROC_FLAG_IOS_APPLICATION;
    }
    private static final int TASK_MAX_SPECIAL_PORT = (int)11L;
    /**
     * {@snippet lang=c :
     * #define TASK_MAX_SPECIAL_PORT 11
     * }
     */
    public static int TASK_MAX_SPECIAL_PORT() {
        return TASK_MAX_SPECIAL_PORT;
    }
    private static final int THREAD_INFO_MAX = (int)32L;
    /**
     * {@snippet lang=c :
     * #define THREAD_INFO_MAX 32
     * }
     */
    public static int THREAD_INFO_MAX() {
        return THREAD_INFO_MAX;
    }
    private static final int THREAD_BASIC_INFO_COUNT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define THREAD_BASIC_INFO_COUNT 10
     * }
     */
    public static int THREAD_BASIC_INFO_COUNT() {
        return THREAD_BASIC_INFO_COUNT;
    }
    private static final int THREAD_IDENTIFIER_INFO_COUNT = (int)6L;
    /**
     * {@snippet lang=c :
     * #define THREAD_IDENTIFIER_INFO_COUNT 6
     * }
     */
    public static int THREAD_IDENTIFIER_INFO_COUNT() {
        return THREAD_IDENTIFIER_INFO_COUNT;
    }
    private static final int THREAD_EXTENDED_INFO_COUNT = (int)28L;
    /**
     * {@snippet lang=c :
     * #define THREAD_EXTENDED_INFO_COUNT 28
     * }
     */
    public static int THREAD_EXTENDED_INFO_COUNT() {
        return THREAD_EXTENDED_INFO_COUNT;
    }
    private static final int THREAD_EXTENDED_POLICY_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define THREAD_EXTENDED_POLICY_COUNT 1
     * }
     */
    public static int THREAD_EXTENDED_POLICY_COUNT() {
        return THREAD_EXTENDED_POLICY_COUNT;
    }
    private static final int THREAD_TIME_CONSTRAINT_POLICY_COUNT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define THREAD_TIME_CONSTRAINT_POLICY_COUNT 4
     * }
     */
    public static int THREAD_TIME_CONSTRAINT_POLICY_COUNT() {
        return THREAD_TIME_CONSTRAINT_POLICY_COUNT;
    }
    private static final int THREAD_PRECEDENCE_POLICY_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define THREAD_PRECEDENCE_POLICY_COUNT 1
     * }
     */
    public static int THREAD_PRECEDENCE_POLICY_COUNT() {
        return THREAD_PRECEDENCE_POLICY_COUNT;
    }
    private static final int THREAD_AFFINITY_POLICY_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define THREAD_AFFINITY_POLICY_COUNT 1
     * }
     */
    public static int THREAD_AFFINITY_POLICY_COUNT() {
        return THREAD_AFFINITY_POLICY_COUNT;
    }
    private static final int THREAD_BACKGROUND_POLICY_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define THREAD_BACKGROUND_POLICY_COUNT 1
     * }
     */
    public static int THREAD_BACKGROUND_POLICY_COUNT() {
        return THREAD_BACKGROUND_POLICY_COUNT;
    }
    private static final int THREAD_LATENCY_QOS_POLICY_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define THREAD_LATENCY_QOS_POLICY_COUNT 1
     * }
     */
    public static int THREAD_LATENCY_QOS_POLICY_COUNT() {
        return THREAD_LATENCY_QOS_POLICY_COUNT;
    }
    private static final int THREAD_THROUGHPUT_QOS_POLICY_COUNT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define THREAD_THROUGHPUT_QOS_POLICY_COUNT 1
     * }
     */
    public static int THREAD_THROUGHPUT_QOS_POLICY_COUNT() {
        return THREAD_THROUGHPUT_QOS_POLICY_COUNT;
    }
    private static final int THREAD_MAX_SPECIAL_PORT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define THREAD_MAX_SPECIAL_PORT 3
     * }
     */
    public static int THREAD_MAX_SPECIAL_PORT() {
        return THREAD_MAX_SPECIAL_PORT;
    }
    private static final int VM_INHERIT_SHARE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_INHERIT_SHARE 0
     * }
     */
    public static int VM_INHERIT_SHARE() {
        return VM_INHERIT_SHARE;
    }
    private static final int VM_INHERIT_COPY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define VM_INHERIT_COPY 1
     * }
     */
    public static int VM_INHERIT_COPY() {
        return VM_INHERIT_COPY;
    }
    private static final int VM_INHERIT_NONE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define VM_INHERIT_NONE 2
     * }
     */
    public static int VM_INHERIT_NONE() {
        return VM_INHERIT_NONE;
    }
    private static final int VM_INHERIT_DONATE_COPY = (int)3L;
    /**
     * {@snippet lang=c :
     * #define VM_INHERIT_DONATE_COPY 3
     * }
     */
    public static int VM_INHERIT_DONATE_COPY() {
        return VM_INHERIT_DONATE_COPY;
    }
    private static final int VM_INHERIT_DEFAULT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define VM_INHERIT_DEFAULT 1
     * }
     */
    public static int VM_INHERIT_DEFAULT() {
        return VM_INHERIT_DEFAULT;
    }
    private static final int VM_INHERIT_LAST_VALID = (int)2L;
    /**
     * {@snippet lang=c :
     * #define VM_INHERIT_LAST_VALID 2
     * }
     */
    public static int VM_INHERIT_LAST_VALID() {
        return VM_INHERIT_LAST_VALID;
    }
    private static final int VM_PURGABLE_SET_STATE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_SET_STATE 0
     * }
     */
    public static int VM_PURGABLE_SET_STATE() {
        return VM_PURGABLE_SET_STATE;
    }
    private static final int VM_PURGABLE_GET_STATE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_GET_STATE 1
     * }
     */
    public static int VM_PURGABLE_GET_STATE() {
        return VM_PURGABLE_GET_STATE;
    }
    private static final int VM_PURGABLE_PURGE_ALL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_PURGE_ALL 2
     * }
     */
    public static int VM_PURGABLE_PURGE_ALL() {
        return VM_PURGABLE_PURGE_ALL;
    }
    private static final int VM_PURGABLE_SET_STATE_FROM_KERNEL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_SET_STATE_FROM_KERNEL 3
     * }
     */
    public static int VM_PURGABLE_SET_STATE_FROM_KERNEL() {
        return VM_PURGABLE_SET_STATE_FROM_KERNEL;
    }
    private static final int VM_PURGABLE_NO_AGING_MASK = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_NO_AGING_MASK 65536
     * }
     */
    public static int VM_PURGABLE_NO_AGING_MASK() {
        return VM_PURGABLE_NO_AGING_MASK;
    }
    private static final int VM_PURGABLE_NO_AGING = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_NO_AGING 65536
     * }
     */
    public static int VM_PURGABLE_NO_AGING() {
        return VM_PURGABLE_NO_AGING;
    }
    private static final int VM_PURGABLE_DEBUG_MASK = (int)12288L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_DEBUG_MASK 12288
     * }
     */
    public static int VM_PURGABLE_DEBUG_MASK() {
        return VM_PURGABLE_DEBUG_MASK;
    }
    private static final int VM_PURGABLE_DEBUG_EMPTY = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_DEBUG_EMPTY 4096
     * }
     */
    public static int VM_PURGABLE_DEBUG_EMPTY() {
        return VM_PURGABLE_DEBUG_EMPTY;
    }
    private static final int VM_PURGABLE_DEBUG_FAULT = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_DEBUG_FAULT 8192
     * }
     */
    public static int VM_PURGABLE_DEBUG_FAULT() {
        return VM_PURGABLE_DEBUG_FAULT;
    }
    private static final int VM_VOLATILE_GROUP_MASK = (int)1792L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_GROUP_MASK 1792
     * }
     */
    public static int VM_VOLATILE_GROUP_MASK() {
        return VM_VOLATILE_GROUP_MASK;
    }
    private static final int VM_VOLATILE_GROUP_DEFAULT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_GROUP_DEFAULT 0
     * }
     */
    public static int VM_VOLATILE_GROUP_DEFAULT() {
        return VM_VOLATILE_GROUP_DEFAULT;
    }
    private static final int VM_VOLATILE_GROUP_0 = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_GROUP_0 0
     * }
     */
    public static int VM_VOLATILE_GROUP_0() {
        return VM_VOLATILE_GROUP_0;
    }
    private static final int VM_VOLATILE_GROUP_1 = (int)256L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_GROUP_1 256
     * }
     */
    public static int VM_VOLATILE_GROUP_1() {
        return VM_VOLATILE_GROUP_1;
    }
    private static final int VM_VOLATILE_GROUP_2 = (int)512L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_GROUP_2 512
     * }
     */
    public static int VM_VOLATILE_GROUP_2() {
        return VM_VOLATILE_GROUP_2;
    }
    private static final int VM_VOLATILE_GROUP_3 = (int)768L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_GROUP_3 768
     * }
     */
    public static int VM_VOLATILE_GROUP_3() {
        return VM_VOLATILE_GROUP_3;
    }
    private static final int VM_VOLATILE_GROUP_4 = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_GROUP_4 1024
     * }
     */
    public static int VM_VOLATILE_GROUP_4() {
        return VM_VOLATILE_GROUP_4;
    }
    private static final int VM_VOLATILE_GROUP_5 = (int)1280L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_GROUP_5 1280
     * }
     */
    public static int VM_VOLATILE_GROUP_5() {
        return VM_VOLATILE_GROUP_5;
    }
    private static final int VM_VOLATILE_GROUP_6 = (int)1536L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_GROUP_6 1536
     * }
     */
    public static int VM_VOLATILE_GROUP_6() {
        return VM_VOLATILE_GROUP_6;
    }
    private static final int VM_VOLATILE_GROUP_7 = (int)1792L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_GROUP_7 1792
     * }
     */
    public static int VM_VOLATILE_GROUP_7() {
        return VM_VOLATILE_GROUP_7;
    }
    private static final int VM_PURGABLE_BEHAVIOR_MASK = (int)64L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_BEHAVIOR_MASK 64
     * }
     */
    public static int VM_PURGABLE_BEHAVIOR_MASK() {
        return VM_PURGABLE_BEHAVIOR_MASK;
    }
    private static final int VM_PURGABLE_BEHAVIOR_FIFO = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_BEHAVIOR_FIFO 0
     * }
     */
    public static int VM_PURGABLE_BEHAVIOR_FIFO() {
        return VM_PURGABLE_BEHAVIOR_FIFO;
    }
    private static final int VM_PURGABLE_BEHAVIOR_LIFO = (int)64L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_BEHAVIOR_LIFO 64
     * }
     */
    public static int VM_PURGABLE_BEHAVIOR_LIFO() {
        return VM_PURGABLE_BEHAVIOR_LIFO;
    }
    private static final int VM_PURGABLE_ORDERING_MASK = (int)32L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_ORDERING_MASK 32
     * }
     */
    public static int VM_PURGABLE_ORDERING_MASK() {
        return VM_PURGABLE_ORDERING_MASK;
    }
    private static final int VM_PURGABLE_ORDERING_OBSOLETE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_ORDERING_OBSOLETE 32
     * }
     */
    public static int VM_PURGABLE_ORDERING_OBSOLETE() {
        return VM_PURGABLE_ORDERING_OBSOLETE;
    }
    private static final int VM_PURGABLE_ORDERING_NORMAL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_ORDERING_NORMAL 0
     * }
     */
    public static int VM_PURGABLE_ORDERING_NORMAL() {
        return VM_PURGABLE_ORDERING_NORMAL;
    }
    private static final int VM_VOLATILE_ORDER_MASK = (int)16L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_ORDER_MASK 16
     * }
     */
    public static int VM_VOLATILE_ORDER_MASK() {
        return VM_VOLATILE_ORDER_MASK;
    }
    private static final int VM_VOLATILE_MAKE_FIRST_IN_GROUP = (int)16L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_MAKE_FIRST_IN_GROUP 16
     * }
     */
    public static int VM_VOLATILE_MAKE_FIRST_IN_GROUP() {
        return VM_VOLATILE_MAKE_FIRST_IN_GROUP;
    }
    private static final int VM_VOLATILE_MAKE_LAST_IN_GROUP = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_VOLATILE_MAKE_LAST_IN_GROUP 0
     * }
     */
    public static int VM_VOLATILE_MAKE_LAST_IN_GROUP() {
        return VM_VOLATILE_MAKE_LAST_IN_GROUP;
    }
    private static final int VM_PURGABLE_ALL_MASKS = (int)79731L;
    /**
     * {@snippet lang=c :
     * #define VM_PURGABLE_ALL_MASKS 79731
     * }
     */
    public static int VM_PURGABLE_ALL_MASKS() {
        return VM_PURGABLE_ALL_MASKS;
    }
    private static final int VM_BEHAVIOR_DEFAULT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_DEFAULT 0
     * }
     */
    public static int VM_BEHAVIOR_DEFAULT() {
        return VM_BEHAVIOR_DEFAULT;
    }
    private static final int VM_BEHAVIOR_RANDOM = (int)1L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_RANDOM 1
     * }
     */
    public static int VM_BEHAVIOR_RANDOM() {
        return VM_BEHAVIOR_RANDOM;
    }
    private static final int VM_BEHAVIOR_SEQUENTIAL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_SEQUENTIAL 2
     * }
     */
    public static int VM_BEHAVIOR_SEQUENTIAL() {
        return VM_BEHAVIOR_SEQUENTIAL;
    }
    private static final int VM_BEHAVIOR_RSEQNTL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_RSEQNTL 3
     * }
     */
    public static int VM_BEHAVIOR_RSEQNTL() {
        return VM_BEHAVIOR_RSEQNTL;
    }
    private static final int VM_BEHAVIOR_WILLNEED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_WILLNEED 4
     * }
     */
    public static int VM_BEHAVIOR_WILLNEED() {
        return VM_BEHAVIOR_WILLNEED;
    }
    private static final int VM_BEHAVIOR_DONTNEED = (int)5L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_DONTNEED 5
     * }
     */
    public static int VM_BEHAVIOR_DONTNEED() {
        return VM_BEHAVIOR_DONTNEED;
    }
    private static final int VM_BEHAVIOR_FREE = (int)6L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_FREE 6
     * }
     */
    public static int VM_BEHAVIOR_FREE() {
        return VM_BEHAVIOR_FREE;
    }
    private static final int VM_BEHAVIOR_ZERO_WIRED_PAGES = (int)7L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_ZERO_WIRED_PAGES 7
     * }
     */
    public static int VM_BEHAVIOR_ZERO_WIRED_PAGES() {
        return VM_BEHAVIOR_ZERO_WIRED_PAGES;
    }
    private static final int VM_BEHAVIOR_REUSABLE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_REUSABLE 8
     * }
     */
    public static int VM_BEHAVIOR_REUSABLE() {
        return VM_BEHAVIOR_REUSABLE;
    }
    private static final int VM_BEHAVIOR_REUSE = (int)9L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_REUSE 9
     * }
     */
    public static int VM_BEHAVIOR_REUSE() {
        return VM_BEHAVIOR_REUSE;
    }
    private static final int VM_BEHAVIOR_CAN_REUSE = (int)10L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_CAN_REUSE 10
     * }
     */
    public static int VM_BEHAVIOR_CAN_REUSE() {
        return VM_BEHAVIOR_CAN_REUSE;
    }
    private static final int VM_BEHAVIOR_PAGEOUT = (int)11L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_PAGEOUT 11
     * }
     */
    public static int VM_BEHAVIOR_PAGEOUT() {
        return VM_BEHAVIOR_PAGEOUT;
    }
    private static final int VM_BEHAVIOR_ZERO = (int)12L;
    /**
     * {@snippet lang=c :
     * #define VM_BEHAVIOR_ZERO 12
     * }
     */
    public static int VM_BEHAVIOR_ZERO() {
        return VM_BEHAVIOR_ZERO;
    }
    private static final int VM_REGION_INFO_MAX = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_INFO_MAX 1024
     * }
     */
    public static int VM_REGION_INFO_MAX() {
        return VM_REGION_INFO_MAX;
    }
    private static final int VM_REGION_BASIC_INFO_COUNT_64 = (int)9L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_BASIC_INFO_COUNT_64 9
     * }
     */
    public static int VM_REGION_BASIC_INFO_COUNT_64() {
        return VM_REGION_BASIC_INFO_COUNT_64;
    }
    private static final int VM_REGION_BASIC_INFO_COUNT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_BASIC_INFO_COUNT 8
     * }
     */
    public static int VM_REGION_BASIC_INFO_COUNT() {
        return VM_REGION_BASIC_INFO_COUNT;
    }
    private static final int VM_REGION_EXTENDED_INFO_COUNT = (int)9L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_EXTENDED_INFO_COUNT 9
     * }
     */
    public static int VM_REGION_EXTENDED_INFO_COUNT() {
        return VM_REGION_EXTENDED_INFO_COUNT;
    }
    private static final int VM_REGION_TOP_INFO_COUNT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_TOP_INFO_COUNT 5
     * }
     */
    public static int VM_REGION_TOP_INFO_COUNT() {
        return VM_REGION_TOP_INFO_COUNT;
    }
    private static final int VM_REGION_SUBMAP_INFO_COUNT = (int)15L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_SUBMAP_INFO_COUNT 15
     * }
     */
    public static int VM_REGION_SUBMAP_INFO_COUNT() {
        return VM_REGION_SUBMAP_INFO_COUNT;
    }
    private static final long VM_REGION_SUBMAP_INFO_V2_SIZE = 76L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_SUBMAP_INFO_V2_SIZE 76
     * }
     */
    public static long VM_REGION_SUBMAP_INFO_V2_SIZE() {
        return VM_REGION_SUBMAP_INFO_V2_SIZE;
    }
    private static final long VM_REGION_SUBMAP_INFO_V1_SIZE = 68L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_SUBMAP_INFO_V1_SIZE 68
     * }
     */
    public static long VM_REGION_SUBMAP_INFO_V1_SIZE() {
        return VM_REGION_SUBMAP_INFO_V1_SIZE;
    }
    private static final long VM_REGION_SUBMAP_INFO_V0_SIZE = 64L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_SUBMAP_INFO_V0_SIZE 64
     * }
     */
    public static long VM_REGION_SUBMAP_INFO_V0_SIZE() {
        return VM_REGION_SUBMAP_INFO_V0_SIZE;
    }
    private static final int VM_REGION_SUBMAP_INFO_V2_COUNT_64 = (int)19L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_SUBMAP_INFO_V2_COUNT_64 19
     * }
     */
    public static int VM_REGION_SUBMAP_INFO_V2_COUNT_64() {
        return VM_REGION_SUBMAP_INFO_V2_COUNT_64;
    }
    private static final int VM_REGION_SUBMAP_INFO_V1_COUNT_64 = (int)17L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_SUBMAP_INFO_V1_COUNT_64 17
     * }
     */
    public static int VM_REGION_SUBMAP_INFO_V1_COUNT_64() {
        return VM_REGION_SUBMAP_INFO_V1_COUNT_64;
    }
    private static final int VM_REGION_SUBMAP_INFO_V0_COUNT_64 = (int)16L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_SUBMAP_INFO_V0_COUNT_64 16
     * }
     */
    public static int VM_REGION_SUBMAP_INFO_V0_COUNT_64() {
        return VM_REGION_SUBMAP_INFO_V0_COUNT_64;
    }
    private static final int VM_REGION_SUBMAP_INFO_COUNT_64 = (int)19L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_SUBMAP_INFO_COUNT_64 19
     * }
     */
    public static int VM_REGION_SUBMAP_INFO_COUNT_64() {
        return VM_REGION_SUBMAP_INFO_COUNT_64;
    }
    private static final int VM_REGION_SUBMAP_SHORT_INFO_COUNT_64 = (int)12L;
    /**
     * {@snippet lang=c :
     * #define VM_REGION_SUBMAP_SHORT_INFO_COUNT_64 12
     * }
     */
    public static int VM_REGION_SUBMAP_SHORT_INFO_COUNT_64() {
        return VM_REGION_SUBMAP_SHORT_INFO_COUNT_64;
    }
    private static final int VM_MAP_ENTRY_MAX = (int)256L;
    /**
     * {@snippet lang=c :
     * #define VM_MAP_ENTRY_MAX 256
     * }
     */
    public static int VM_MAP_ENTRY_MAX() {
        return VM_MAP_ENTRY_MAX;
    }
    private static final int VM_PAGE_INFO_BASIC_COUNT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define VM_PAGE_INFO_BASIC_COUNT 8
     * }
     */
    public static int VM_PAGE_INFO_BASIC_COUNT() {
        return VM_PAGE_INFO_BASIC_COUNT;
    }
}

