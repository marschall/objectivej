// Generated by jextract

package com.github.marschall.objectivej.header;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * struct {
 *     mach_msg_bits_t msgh_bits;
 *     mach_msg_size_t msgh_size;
 *     mach_port_t msgh_remote_port;
 *     mach_port_t msgh_local_port;
 *     mach_port_name_t msgh_voucher_port;
 *     mach_msg_id_t msgh_id;
 * }
 * }
 */
public class mach_msg_header_t {

    mach_msg_header_t() {
        // Should not be called directly
    }

    private static final GroupLayout $LAYOUT = MemoryLayout.structLayout(
        ObjCRuntime.C_INT.withName("msgh_bits"),
        ObjCRuntime.C_INT.withName("msgh_size"),
        ObjCRuntime.C_INT.withName("msgh_remote_port"),
        ObjCRuntime.C_INT.withName("msgh_local_port"),
        ObjCRuntime.C_INT.withName("msgh_voucher_port"),
        ObjCRuntime.C_INT.withName("msgh_id")
    ).withName("$anon$422:9");

    /**
     * The layout of this struct
     */
    public static final GroupLayout layout() {
        return $LAYOUT;
    }

    private static final OfInt msgh_bits$LAYOUT = (OfInt)$LAYOUT.select(groupElement("msgh_bits"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * mach_msg_bits_t msgh_bits
     * }
     */
    public static final OfInt msgh_bits$layout() {
        return msgh_bits$LAYOUT;
    }

    private static final long msgh_bits$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * mach_msg_bits_t msgh_bits
     * }
     */
    public static final long msgh_bits$offset() {
        return msgh_bits$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * mach_msg_bits_t msgh_bits
     * }
     */
    public static int msgh_bits(MemorySegment struct) {
        return struct.get(msgh_bits$LAYOUT, msgh_bits$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * mach_msg_bits_t msgh_bits
     * }
     */
    public static void msgh_bits(MemorySegment struct, int fieldValue) {
        struct.set(msgh_bits$LAYOUT, msgh_bits$OFFSET, fieldValue);
    }

    private static final OfInt msgh_size$LAYOUT = (OfInt)$LAYOUT.select(groupElement("msgh_size"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * mach_msg_size_t msgh_size
     * }
     */
    public static final OfInt msgh_size$layout() {
        return msgh_size$LAYOUT;
    }

    private static final long msgh_size$OFFSET = 4;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * mach_msg_size_t msgh_size
     * }
     */
    public static final long msgh_size$offset() {
        return msgh_size$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * mach_msg_size_t msgh_size
     * }
     */
    public static int msgh_size(MemorySegment struct) {
        return struct.get(msgh_size$LAYOUT, msgh_size$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * mach_msg_size_t msgh_size
     * }
     */
    public static void msgh_size(MemorySegment struct, int fieldValue) {
        struct.set(msgh_size$LAYOUT, msgh_size$OFFSET, fieldValue);
    }

    private static final OfInt msgh_remote_port$LAYOUT = (OfInt)$LAYOUT.select(groupElement("msgh_remote_port"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * mach_port_t msgh_remote_port
     * }
     */
    public static final OfInt msgh_remote_port$layout() {
        return msgh_remote_port$LAYOUT;
    }

    private static final long msgh_remote_port$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * mach_port_t msgh_remote_port
     * }
     */
    public static final long msgh_remote_port$offset() {
        return msgh_remote_port$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * mach_port_t msgh_remote_port
     * }
     */
    public static int msgh_remote_port(MemorySegment struct) {
        return struct.get(msgh_remote_port$LAYOUT, msgh_remote_port$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * mach_port_t msgh_remote_port
     * }
     */
    public static void msgh_remote_port(MemorySegment struct, int fieldValue) {
        struct.set(msgh_remote_port$LAYOUT, msgh_remote_port$OFFSET, fieldValue);
    }

    private static final OfInt msgh_local_port$LAYOUT = (OfInt)$LAYOUT.select(groupElement("msgh_local_port"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * mach_port_t msgh_local_port
     * }
     */
    public static final OfInt msgh_local_port$layout() {
        return msgh_local_port$LAYOUT;
    }

    private static final long msgh_local_port$OFFSET = 12;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * mach_port_t msgh_local_port
     * }
     */
    public static final long msgh_local_port$offset() {
        return msgh_local_port$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * mach_port_t msgh_local_port
     * }
     */
    public static int msgh_local_port(MemorySegment struct) {
        return struct.get(msgh_local_port$LAYOUT, msgh_local_port$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * mach_port_t msgh_local_port
     * }
     */
    public static void msgh_local_port(MemorySegment struct, int fieldValue) {
        struct.set(msgh_local_port$LAYOUT, msgh_local_port$OFFSET, fieldValue);
    }

    private static final OfInt msgh_voucher_port$LAYOUT = (OfInt)$LAYOUT.select(groupElement("msgh_voucher_port"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * mach_port_name_t msgh_voucher_port
     * }
     */
    public static final OfInt msgh_voucher_port$layout() {
        return msgh_voucher_port$LAYOUT;
    }

    private static final long msgh_voucher_port$OFFSET = 16;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * mach_port_name_t msgh_voucher_port
     * }
     */
    public static final long msgh_voucher_port$offset() {
        return msgh_voucher_port$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * mach_port_name_t msgh_voucher_port
     * }
     */
    public static int msgh_voucher_port(MemorySegment struct) {
        return struct.get(msgh_voucher_port$LAYOUT, msgh_voucher_port$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * mach_port_name_t msgh_voucher_port
     * }
     */
    public static void msgh_voucher_port(MemorySegment struct, int fieldValue) {
        struct.set(msgh_voucher_port$LAYOUT, msgh_voucher_port$OFFSET, fieldValue);
    }

    private static final OfInt msgh_id$LAYOUT = (OfInt)$LAYOUT.select(groupElement("msgh_id"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * mach_msg_id_t msgh_id
     * }
     */
    public static final OfInt msgh_id$layout() {
        return msgh_id$LAYOUT;
    }

    private static final long msgh_id$OFFSET = 20;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * mach_msg_id_t msgh_id
     * }
     */
    public static final long msgh_id$offset() {
        return msgh_id$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * mach_msg_id_t msgh_id
     * }
     */
    public static int msgh_id(MemorySegment struct) {
        return struct.get(msgh_id$LAYOUT, msgh_id$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * mach_msg_id_t msgh_id
     * }
     */
    public static void msgh_id(MemorySegment struct, int fieldValue) {
        struct.set(msgh_id$LAYOUT, msgh_id$OFFSET, fieldValue);
    }

    /**
     * Obtains a slice of {@code arrayParam} which selects the array element at {@code index}.
     * The returned segment has address {@code arrayParam.address() + index * layout().byteSize()}
     */
    public static MemorySegment asSlice(MemorySegment array, long index) {
        return array.asSlice(layout().byteSize() * index);
    }

    /**
     * The size (in bytes) of this struct
     */
    public static long sizeof() { return layout().byteSize(); }

    /**
     * Allocate a segment of size {@code layout().byteSize()} using {@code allocator}
     */
    public static MemorySegment allocate(SegmentAllocator allocator) {
        return allocator.allocate(layout());
    }

    /**
     * Allocate an array of size {@code elementCount} using {@code allocator}.
     * The returned segment has size {@code elementCount * layout().byteSize()}.
     */
    public static MemorySegment allocateArray(long elementCount, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(elementCount, layout()));
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, Arena arena, Consumer<MemorySegment> cleanup) {
        return reinterpret(addr, 1, arena, cleanup);
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code elementCount * layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, long elementCount, Arena arena, Consumer<MemorySegment> cleanup) {
        return addr.reinterpret(layout().byteSize() * elementCount, arena, cleanup);
    }
}

